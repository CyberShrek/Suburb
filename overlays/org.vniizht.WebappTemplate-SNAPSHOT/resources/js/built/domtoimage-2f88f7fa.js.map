{"version":3,"file":"domtoimage-2f88f7fa.js","sources":["../../../../../../node_modules/dom-to-image/src/dom-to-image.js"],"sourcesContent":["(function (global) {\n    'use strict';\n\n    var util = newUtil();\n    var inliner = newInliner();\n    var fontFaces = newFontFaces();\n    var images = newImages();\n\n    // Default impl options\n    var defaultOptions = {\n        // Default is to fail on error, no placeholder\n        imagePlaceholder: undefined,\n        // Default cache bust is false, it will use the cache\n        cacheBust: false\n    };\n\n    var domtoimage = {\n        toSvg: toSvg,\n        toPng: toPng,\n        toJpeg: toJpeg,\n        toBlob: toBlob,\n        toPixelData: toPixelData,\n        impl: {\n            fontFaces: fontFaces,\n            images: images,\n            util: util,\n            inliner: inliner,\n            options: {}\n        }\n    };\n\n    if (typeof module !== 'undefined')\n        module.exports = domtoimage;\n    else\n        global.domtoimage = domtoimage;\n\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options\n     * @param {Function} options.filter - Should return true if passed node should be included in the output\n     *          (excluding node means excluding it's children as well). Not called on the root node.\n     * @param {String} options.bgcolor - color for the background, any valid CSS color value.\n     * @param {Number} options.width - width to be applied to node before rendering.\n     * @param {Number} options.height - height to be applied to node before rendering.\n     * @param {Object} options.style - an object whose properties to be copied to node's style before rendering.\n     * @param {Number} options.quality - a Number between 0 and 1 indicating image quality (applicable to JPEG only),\n                defaults to 1.0.\n     * @param {String} options.imagePlaceholder - dataURL to use as a placeholder for failed images, default behaviour is to fail fast on images we can't fetch\n     * @param {Boolean} options.cacheBust - set to true to cache bust by appending the time to the request url\n     * @return {Promise} - A promise that is fulfilled with a SVG image data URL\n     * */\n    function toSvg(node, options) {\n        options = options || {};\n        copyOptions(options);\n        return Promise.resolve(node)\n            .then(function (node) {\n                return cloneNode(node, options.filter, true);\n            })\n            .then(embedFonts)\n            .then(inlineImages)\n            .then(applyOptions)\n            .then(function (clone) {\n                return makeSvgDataUri(clone,\n                    options.width || util.width(node),\n                    options.height || util.height(node)\n                );\n            });\n\n        function applyOptions(clone) {\n            if (options.bgcolor) clone.style.backgroundColor = options.bgcolor;\n\n            if (options.width) clone.style.width = options.width + 'px';\n            if (options.height) clone.style.height = options.height + 'px';\n\n            if (options.style)\n                Object.keys(options.style).forEach(function (property) {\n                    clone.style[property] = options.style[property];\n                });\n\n            return clone;\n        }\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a Uint8Array containing RGBA pixel data.\n     * */\n    function toPixelData(node, options) {\n        return draw(node, options || {})\n            .then(function (canvas) {\n                return canvas.getContext('2d').getImageData(\n                    0,\n                    0,\n                    util.width(node),\n                    util.height(node)\n                ).data;\n            });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a PNG image data URL\n     * */\n    function toPng(node, options) {\n        return draw(node, options || {})\n            .then(function (canvas) {\n                return canvas.toDataURL();\n            });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a JPEG image data URL\n     * */\n    function toJpeg(node, options) {\n        options = options || {};\n        return draw(node, options)\n            .then(function (canvas) {\n                return canvas.toDataURL('image/jpeg', options.quality || 1.0);\n            });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a PNG image blob\n     * */\n    function toBlob(node, options) {\n        return draw(node, options || {})\n            .then(util.canvasToBlob);\n    }\n\n    function copyOptions(options) {\n        // Copy options to impl options for use in impl\n        if(typeof(options.imagePlaceholder) === 'undefined') {\n            domtoimage.impl.options.imagePlaceholder = defaultOptions.imagePlaceholder;\n        } else {\n            domtoimage.impl.options.imagePlaceholder = options.imagePlaceholder;\n        }\n\n        if(typeof(options.cacheBust) === 'undefined') {\n            domtoimage.impl.options.cacheBust = defaultOptions.cacheBust;\n        } else {\n            domtoimage.impl.options.cacheBust = options.cacheBust;\n        }\n    }\n\n    function draw(domNode, options) {\n        return toSvg(domNode, options)\n            .then(util.makeImage)\n            .then(util.delay(100))\n            .then(function (image) {\n                var canvas = newCanvas(domNode);\n                canvas.getContext('2d').drawImage(image, 0, 0);\n                return canvas;\n            });\n\n        function newCanvas(domNode) {\n            var canvas = document.createElement('canvas');\n            canvas.width = options.width || util.width(domNode);\n            canvas.height = options.height || util.height(domNode);\n\n            if (options.bgcolor) {\n                var ctx = canvas.getContext('2d');\n                ctx.fillStyle = options.bgcolor;\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\n            }\n\n            return canvas;\n        }\n    }\n\n    function cloneNode(node, filter, root) {\n        if (!root && filter && !filter(node)) return Promise.resolve();\n\n        return Promise.resolve(node)\n            .then(makeNodeCopy)\n            .then(function (clone) {\n                return cloneChildren(node, clone, filter);\n            })\n            .then(function (clone) {\n                return processClone(node, clone);\n            });\n\n        function makeNodeCopy(node) {\n            if (node instanceof HTMLCanvasElement) return util.makeImage(node.toDataURL());\n            return node.cloneNode(false);\n        }\n\n        function cloneChildren(original, clone, filter) {\n            var children = original.childNodes;\n            if (children.length === 0) return Promise.resolve(clone);\n\n            return cloneChildrenInOrder(clone, util.asArray(children), filter)\n                .then(function () {\n                    return clone;\n                });\n\n            function cloneChildrenInOrder(parent, children, filter) {\n                var done = Promise.resolve();\n                children.forEach(function (child) {\n                    done = done\n                        .then(function () {\n                            return cloneNode(child, filter);\n                        })\n                        .then(function (childClone) {\n                            if (childClone) parent.appendChild(childClone);\n                        });\n                });\n                return done;\n            }\n        }\n\n        function processClone(original, clone) {\n            if (!(clone instanceof Element)) return clone;\n\n            return Promise.resolve()\n                .then(cloneStyle)\n                .then(clonePseudoElements)\n                .then(copyUserInput)\n                .then(fixSvg)\n                .then(function () {\n                    return clone;\n                });\n\n            function cloneStyle() {\n                copyStyle(window.getComputedStyle(original), clone.style);\n\n                function copyStyle(source, target) {\n                    if (source.cssText) target.cssText = source.cssText;\n                    else copyProperties(source, target);\n\n                    function copyProperties(source, target) {\n                        util.asArray(source).forEach(function (name) {\n                            target.setProperty(\n                                name,\n                                source.getPropertyValue(name),\n                                source.getPropertyPriority(name)\n                            );\n                        });\n                    }\n                }\n            }\n\n            function clonePseudoElements() {\n                [':before', ':after'].forEach(function (element) {\n                    clonePseudoElement(element);\n                });\n\n                function clonePseudoElement(element) {\n                    var style = window.getComputedStyle(original, element);\n                    var content = style.getPropertyValue('content');\n\n                    if (content === '' || content === 'none') return;\n\n                    var className = util.uid();\n                    clone.className = clone.className + ' ' + className;\n                    var styleElement = document.createElement('style');\n                    styleElement.appendChild(formatPseudoElementStyle(className, element, style));\n                    clone.appendChild(styleElement);\n\n                    function formatPseudoElementStyle(className, element, style) {\n                        var selector = '.' + className + ':' + element;\n                        var cssText = style.cssText ? formatCssText(style) : formatCssProperties(style);\n                        return document.createTextNode(selector + '{' + cssText + '}');\n\n                        function formatCssText(style) {\n                            var content = style.getPropertyValue('content');\n                            return style.cssText + ' content: ' + content + ';';\n                        }\n\n                        function formatCssProperties(style) {\n\n                            return util.asArray(style)\n                                .map(formatProperty)\n                                .join('; ') + ';';\n\n                            function formatProperty(name) {\n                                return name + ': ' +\n                                    style.getPropertyValue(name) +\n                                    (style.getPropertyPriority(name) ? ' !important' : '');\n                            }\n                        }\n                    }\n                }\n            }\n\n            function copyUserInput() {\n                if (original instanceof HTMLTextAreaElement) clone.innerHTML = original.value;\n                if (original instanceof HTMLInputElement) clone.setAttribute(\"value\", original.value);\n            }\n\n            function fixSvg() {\n                if (!(clone instanceof SVGElement)) return;\n                clone.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n\n                if (!(clone instanceof SVGRectElement)) return;\n                ['width', 'height'].forEach(function (attribute) {\n                    var value = clone.getAttribute(attribute);\n                    if (!value) return;\n\n                    clone.style.setProperty(attribute, value);\n                });\n            }\n        }\n    }\n\n    function embedFonts(node) {\n        return fontFaces.resolveAll()\n            .then(function (cssText) {\n                var styleNode = document.createElement('style');\n                node.appendChild(styleNode);\n                styleNode.appendChild(document.createTextNode(cssText));\n                return node;\n            });\n    }\n\n    function inlineImages(node) {\n        return images.inlineAll(node)\n            .then(function () {\n                return node;\n            });\n    }\n\n    function makeSvgDataUri(node, width, height) {\n        return Promise.resolve(node)\n            .then(function (node) {\n                node.setAttribute('xmlns', 'http://www.w3.org/1999/xhtml');\n                return new XMLSerializer().serializeToString(node);\n            })\n            .then(util.escapeXhtml)\n            .then(function (xhtml) {\n                return '<foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">' + xhtml + '</foreignObject>';\n            })\n            .then(function (foreignObject) {\n                return '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"' + width + '\" height=\"' + height + '\">' +\n                    foreignObject + '</svg>';\n            })\n            .then(function (svg) {\n                return 'data:image/svg+xml;charset=utf-8,' + svg;\n            });\n    }\n\n    function newUtil() {\n        return {\n            escape: escape,\n            parseExtension: parseExtension,\n            mimeType: mimeType,\n            dataAsUrl: dataAsUrl,\n            isDataUrl: isDataUrl,\n            canvasToBlob: canvasToBlob,\n            resolveUrl: resolveUrl,\n            getAndEncode: getAndEncode,\n            uid: uid(),\n            delay: delay,\n            asArray: asArray,\n            escapeXhtml: escapeXhtml,\n            makeImage: makeImage,\n            width: width,\n            height: height\n        };\n\n        function mimes() {\n            /*\n             * Only WOFF and EOT mime types for fonts are 'real'\n             * see http://www.iana.org/assignments/media-types/media-types.xhtml\n             */\n            var WOFF = 'application/font-woff';\n            var JPEG = 'image/jpeg';\n\n            return {\n                'woff': WOFF,\n                'woff2': WOFF,\n                'ttf': 'application/font-truetype',\n                'eot': 'application/vnd.ms-fontobject',\n                'png': 'image/png',\n                'jpg': JPEG,\n                'jpeg': JPEG,\n                'gif': 'image/gif',\n                'tiff': 'image/tiff',\n                'svg': 'image/svg+xml'\n            };\n        }\n\n        function parseExtension(url) {\n            var match = /\\.([^\\.\\/]*?)$/g.exec(url);\n            if (match) return match[1];\n            else return '';\n        }\n\n        function mimeType(url) {\n            var extension = parseExtension(url).toLowerCase();\n            return mimes()[extension] || '';\n        }\n\n        function isDataUrl(url) {\n            return url.search(/^(data:)/) !== -1;\n        }\n\n        function toBlob(canvas) {\n            return new Promise(function (resolve) {\n                var binaryString = window.atob(canvas.toDataURL().split(',')[1]);\n                var length = binaryString.length;\n                var binaryArray = new Uint8Array(length);\n\n                for (var i = 0; i < length; i++)\n                    binaryArray[i] = binaryString.charCodeAt(i);\n\n                resolve(new Blob([binaryArray], {\n                    type: 'image/png'\n                }));\n            });\n        }\n\n        function canvasToBlob(canvas) {\n            if (canvas.toBlob)\n                return new Promise(function (resolve) {\n                    canvas.toBlob(resolve);\n                });\n\n            return toBlob(canvas);\n        }\n\n        function resolveUrl(url, baseUrl) {\n            var doc = document.implementation.createHTMLDocument();\n            var base = doc.createElement('base');\n            doc.head.appendChild(base);\n            var a = doc.createElement('a');\n            doc.body.appendChild(a);\n            base.href = baseUrl;\n            a.href = url;\n            return a.href;\n        }\n\n        function uid() {\n            var index = 0;\n\n            return function () {\n                return 'u' + fourRandomChars() + index++;\n\n                function fourRandomChars() {\n                    /* see http://stackoverflow.com/a/6248722/2519373 */\n                    return ('0000' + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4);\n                }\n            };\n        }\n\n        function makeImage(uri) {\n            return new Promise(function (resolve, reject) {\n                var image = new Image();\n                image.onload = function () {\n                    resolve(image);\n                };\n                image.onerror = reject;\n                image.src = uri;\n            });\n        }\n\n        function getAndEncode(url) {\n            var TIMEOUT = 30000;\n            if(domtoimage.impl.options.cacheBust) {\n                // Cache bypass so we dont have CORS issues with cached images\n                // Source: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n                url += ((/\\?/).test(url) ? \"&\" : \"?\") + (new Date()).getTime();\n            }\n\n            return new Promise(function (resolve) {\n                var request = new XMLHttpRequest();\n\n                request.onreadystatechange = done;\n                request.ontimeout = timeout;\n                request.responseType = 'blob';\n                request.timeout = TIMEOUT;\n                request.open('GET', url, true);\n                request.send();\n\n                var placeholder;\n                if(domtoimage.impl.options.imagePlaceholder) {\n                    var split = domtoimage.impl.options.imagePlaceholder.split(/,/);\n                    if(split && split[1]) {\n                        placeholder = split[1];\n                    }\n                }\n\n                function done() {\n                    if (request.readyState !== 4) return;\n\n                    if (request.status !== 200) {\n                        if(placeholder) {\n                            resolve(placeholder);\n                        } else {\n                            fail('cannot fetch resource: ' + url + ', status: ' + request.status);\n                        }\n\n                        return;\n                    }\n\n                    var encoder = new FileReader();\n                    encoder.onloadend = function () {\n                        var content = encoder.result.split(/,/)[1];\n                        resolve(content);\n                    };\n                    encoder.readAsDataURL(request.response);\n                }\n\n                function timeout() {\n                    if(placeholder) {\n                        resolve(placeholder);\n                    } else {\n                        fail('timeout of ' + TIMEOUT + 'ms occured while fetching resource: ' + url);\n                    }\n                }\n\n                function fail(message) {\n                    console.error(message);\n                    resolve('');\n                }\n            });\n        }\n\n        function dataAsUrl(content, type) {\n            return 'data:' + type + ';base64,' + content;\n        }\n\n        function escape(string) {\n            return string.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, '\\\\$1');\n        }\n\n        function delay(ms) {\n            return function (arg) {\n                return new Promise(function (resolve) {\n                    setTimeout(function () {\n                        resolve(arg);\n                    }, ms);\n                });\n            };\n        }\n\n        function asArray(arrayLike) {\n            var array = [];\n            var length = arrayLike.length;\n            for (var i = 0; i < length; i++) array.push(arrayLike[i]);\n            return array;\n        }\n\n        function escapeXhtml(string) {\n            return string.replace(/#/g, '%23').replace(/\\n/g, '%0A');\n        }\n\n        function width(node) {\n            var leftBorder = px(node, 'border-left-width');\n            var rightBorder = px(node, 'border-right-width');\n            return node.scrollWidth + leftBorder + rightBorder;\n        }\n\n        function height(node) {\n            var topBorder = px(node, 'border-top-width');\n            var bottomBorder = px(node, 'border-bottom-width');\n            return node.scrollHeight + topBorder + bottomBorder;\n        }\n\n        function px(node, styleProperty) {\n            var value = window.getComputedStyle(node).getPropertyValue(styleProperty);\n            return parseFloat(value.replace('px', ''));\n        }\n    }\n\n    function newInliner() {\n        var URL_REGEX = /url\\(['\"]?([^'\"]+?)['\"]?\\)/g;\n\n        return {\n            inlineAll: inlineAll,\n            shouldProcess: shouldProcess,\n            impl: {\n                readUrls: readUrls,\n                inline: inline\n            }\n        };\n\n        function shouldProcess(string) {\n            return string.search(URL_REGEX) !== -1;\n        }\n\n        function readUrls(string) {\n            var result = [];\n            var match;\n            while ((match = URL_REGEX.exec(string)) !== null) {\n                result.push(match[1]);\n            }\n            return result.filter(function (url) {\n                return !util.isDataUrl(url);\n            });\n        }\n\n        function inline(string, url, baseUrl, get) {\n            return Promise.resolve(url)\n                .then(function (url) {\n                    return baseUrl ? util.resolveUrl(url, baseUrl) : url;\n                })\n                .then(get || util.getAndEncode)\n                .then(function (data) {\n                    return util.dataAsUrl(data, util.mimeType(url));\n                })\n                .then(function (dataUrl) {\n                    return string.replace(urlAsRegex(url), '$1' + dataUrl + '$3');\n                });\n\n            function urlAsRegex(url) {\n                return new RegExp('(url\\\\([\\'\"]?)(' + util.escape(url) + ')([\\'\"]?\\\\))', 'g');\n            }\n        }\n\n        function inlineAll(string, baseUrl, get) {\n            if (nothingToInline()) return Promise.resolve(string);\n\n            return Promise.resolve(string)\n                .then(readUrls)\n                .then(function (urls) {\n                    var done = Promise.resolve(string);\n                    urls.forEach(function (url) {\n                        done = done.then(function (string) {\n                            return inline(string, url, baseUrl, get);\n                        });\n                    });\n                    return done;\n                });\n\n            function nothingToInline() {\n                return !shouldProcess(string);\n            }\n        }\n    }\n\n    function newFontFaces() {\n        return {\n            resolveAll: resolveAll,\n            impl: {\n                readAll: readAll\n            }\n        };\n\n        function resolveAll() {\n            return readAll(document)\n                .then(function (webFonts) {\n                    return Promise.all(\n                        webFonts.map(function (webFont) {\n                            return webFont.resolve();\n                        })\n                    );\n                })\n                .then(function (cssStrings) {\n                    return cssStrings.join('\\n');\n                });\n        }\n\n        function readAll() {\n            return Promise.resolve(util.asArray(document.styleSheets))\n                .then(getCssRules)\n                .then(selectWebFontRules)\n                .then(function (rules) {\n                    return rules.map(newWebFont);\n                });\n\n            function selectWebFontRules(cssRules) {\n                return cssRules\n                    .filter(function (rule) {\n                        return rule.type === CSSRule.FONT_FACE_RULE;\n                    })\n                    .filter(function (rule) {\n                        return inliner.shouldProcess(rule.style.getPropertyValue('src'));\n                    });\n            }\n\n            function getCssRules(styleSheets) {\n                var cssRules = [];\n                styleSheets.forEach(function (sheet) {\n                    try {\n                        util.asArray(sheet.cssRules || []).forEach(cssRules.push.bind(cssRules));\n                    } catch (e) {\n                        console.log('Error while reading CSS rules from ' + sheet.href, e.toString());\n                    }\n                });\n                return cssRules;\n            }\n\n            function newWebFont(webFontRule) {\n                return {\n                    resolve: function resolve() {\n                        var baseUrl = (webFontRule.parentStyleSheet || {}).href;\n                        return inliner.inlineAll(webFontRule.cssText, baseUrl);\n                    },\n                    src: function () {\n                        return webFontRule.style.getPropertyValue('src');\n                    }\n                };\n            }\n        }\n    }\n\n    function newImages() {\n        return {\n            inlineAll: inlineAll,\n            impl: {\n                newImage: newImage\n            }\n        };\n\n        function newImage(element) {\n            return {\n                inline: inline\n            };\n\n            function inline(get) {\n                if (util.isDataUrl(element.src)) return Promise.resolve();\n\n                return Promise.resolve(element.src)\n                    .then(get || util.getAndEncode)\n                    .then(function (data) {\n                        return util.dataAsUrl(data, util.mimeType(element.src));\n                    })\n                    .then(function (dataUrl) {\n                        return new Promise(function (resolve, reject) {\n                            element.onload = resolve;\n                            element.onerror = reject;\n                            element.src = dataUrl;\n                        });\n                    });\n            }\n        }\n\n        function inlineAll(node) {\n            if (!(node instanceof Element)) return Promise.resolve(node);\n\n            return inlineBackground(node)\n                .then(function () {\n                    if (node instanceof HTMLImageElement)\n                        return newImage(node).inline();\n                    else\n                        return Promise.all(\n                            util.asArray(node.childNodes).map(function (child) {\n                                return inlineAll(child);\n                            })\n                        );\n                });\n\n            function inlineBackground(node) {\n                var background = node.style.getPropertyValue('background');\n\n                if (!background) return Promise.resolve(node);\n\n                return inliner.inlineAll(background)\n                    .then(function (inlined) {\n                        node.style.setProperty(\n                            'background',\n                            inlined,\n                            node.style.getPropertyPriority('background')\n                        );\n                    })\n                    .then(function () {\n                        return node;\n                    });\n            }\n        }\n    }\n})(this);\n"],"names":["util","escape","string","replace","parseExtension","mimeType","url","WOFF","JPEG","extension","toLowerCase","woff","woff2","ttf","eot","png","jpg","jpeg","gif","tiff","svg","dataAsUrl","content","type","isDataUrl","search","canvasToBlob","canvas","toBlob","Promise","resolve","binaryString","window","atob","toDataURL","split","length","binaryArray","Uint8Array","i","charCodeAt","Blob","resolveUrl","baseUrl","doc","document","implementation","createHTMLDocument","base","createElement","head","appendChild","a","body","href","getAndEncode","TIMEOUT","domtoimage","impl","options","cacheBust","test","Date","getTime","placeholder","request","XMLHttpRequest","onreadystatechange","done","ontimeout","timeout","responseType","open","send","imagePlaceholder","readyState","status","encoder","FileReader","onloadend","result","readAsDataURL","response","fail","message","console","error","uid","index","fourRandomChars","Math","random","pow","toString","slice","delay","ms","arg","setTimeout","asArray","arrayLike","array","push","escapeXhtml","makeImage","uri","reject","image","Image","onload","onerror","src","width","node","leftBorder","px","rightBorder","scrollWidth","height","topBorder","bottomBorder","scrollHeight","match","exec","styleProperty","value","getComputedStyle","getPropertyValue","parseFloat","newUtil","inliner","URL_REGEX","inlineAll","get","nothingToInline","then","readUrls","urls","forEach","inline","shouldProcess","filter","data","dataUrl","RegExp","urlAsRegex","newInliner","fontFaces","resolveAll","readAll","webFonts","all","map","webFont","cssStrings","join","styleSheets","cssRules","sheet","bind","e","log","rule","CSSRule","FONT_FACE_RULE","style","rules","newWebFont","webFontRule","parentStyleSheet","cssText","newFontFaces","images","Element","inlineBackground","HTMLImageElement","newImage","childNodes","child","background","inlined","setProperty","getPropertyPriority","element","newImages","defaultOptions","undefined","toSvg","toPng","draw","toJpeg","quality","toPixelData","getContext","getImageData","copyOptions","cloneNode","embedFonts","inlineImages","clone","bgcolor","backgroundColor","Object","keys","property","setAttribute","XMLSerializer","serializeToString","xhtml","foreignObject","makeSvgDataUri","domNode","ctx","fillStyle","fillRect","newCanvas","drawImage","root","HTMLCanvasElement","original","children","cloneChildrenInOrder","parent","childClone","cloneChildren","cloneStyle","clonePseudoElements","copyUserInput","fixSvg","copyStyle","source","target","copyProperties","name","clonePseudoElement","className","styleElement","formatPseudoElementStyle","selector","formatCssText","formatCssProperties","createTextNode","formatProperty","HTMLTextAreaElement","innerHTML","HTMLInputElement","SVGElement","SVGRectElement","attribute","getAttribute","processClone","styleNode","module"],"mappings":"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","x_google_ignoreList":[0]}