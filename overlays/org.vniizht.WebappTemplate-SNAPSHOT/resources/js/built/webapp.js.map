{"version":3,"file":"webapp.js","sources":["../../../../../../node_modules/svelte/src/runtime/internal/utils.js","../../../../../../node_modules/svelte/src/runtime/internal/environment.js","../../../../../../node_modules/svelte/src/runtime/internal/loop.js","../../../../../../node_modules/svelte/src/runtime/internal/globals.js","../../../../../../node_modules/svelte/src/runtime/internal/dom.js","../../../../../../node_modules/svelte/src/runtime/internal/style_manager.js","../../../../../../node_modules/svelte/src/runtime/internal/lifecycle.js","../../../../../../node_modules/svelte/src/runtime/internal/scheduler.js","../../../../../../node_modules/svelte/src/runtime/internal/transitions.js","../../../../../../node_modules/svelte/src/runtime/internal/await_block.js","../../../../../../node_modules/svelte/src/runtime/internal/Component.js","../../../../../../node_modules/svelte/src/runtime/internal/dev.js","../../../../../../node_modules/svelte/src/shared/version.js","../../../../../../node_modules/svelte/src/runtime/internal/each.js","../../../../../../node_modules/svelte/src/runtime/easing/index.js","../../../../../../node_modules/svelte/src/runtime/transition/index.js","../../../../../../node_modules/svelte/src/runtime/internal/disclose-version/index.js","../../../../../../typescript/webapp/properties.ts","../../../../../../typescript/webapp/util/resolver.ts","../../../../typescript/webapp/components/common/misc/Loading.svelte","../../../../typescript/webapp/components/common/misc/Tabs.svelte","../../../../../../typescript/webapp/third-party/abstract/Module.ts","../../../../../../typescript/webapp/third-party/SweetAlertModule.ts","../../../../../../typescript/webapp/util/alert.ts","../../../../typescript/webapp/components/common/misc/Image.svelte","../../../../typescript/webapp/components/common/input/Button.svelte","../../../../typescript/webapp/components/common/navigation/Header.svelte","../../../../typescript/webapp/components/common/WebappTemplate.svelte","../../../../typescript/webapp/components/common/misc/Grid.svelte","../../../../typescript/webapp/components/common/form/Section.svelte","../../../../typescript/webapp/components/common/form/Form.svelte","../../../../typescript/webapp/components/common/form/Field.svelte","../../../../../../typescript/webapp/util/data.ts","../../../../../../typescript/webapp/third-party/abstract/InputModule.ts","../../../../../../typescript/webapp/third-party/EasepickModule.ts","../../../../typescript/webapp/components/common/input/Calendar.svelte","../../../../typescript/webapp/components/common/input/Switch.svelte","../../../../../../typescript/webapp/third-party/VirtualSelectModule.ts","../../../../typescript/webapp/components/common/input/Select.svelte","../../../../../../typescript/webapp/util/dom.ts","../../../../../../typescript/webapp/api/http/Http.ts","../../../../../../typescript/webapp/api/http/SimpleHttp.ts","../../../../../../typescript/webapp/api/serviceBank.ts","../../../../typescript/webapp/components/forms/CommonForm.svelte","../../../../typescript/webapp/components/forms/SalesForm.svelte","../../../../typescript/webapp/components/forms/DepsForm.svelte","../../../../../../typescript/webapp/model/export/ExportableReport.ts","../../../../../../typescript/webapp/model/export/TableModel.ts","../../../../../../typescript/webapp/api/report.ts","../../../../typescript/webapp/components/common/navigation/ToTopButton.svelte","../../../../typescript/webapp/components/common/report/ReportHeader.svelte","../../../../typescript/webapp/components/common/report/Report.svelte","../../../../typescript/webapp/components/common/misc/Modal.svelte","../../../../typescript/webapp/components/common/report/content/ContentBlock.svelte","../../../../typescript/webapp/components/common/report/content/table/body/Body.svelte","../../../../typescript/webapp/components/common/report/content/table/head/ColumnHeaders.svelte","../../../../typescript/webapp/components/common/report/content/table/head/Head.svelte","../../../../typescript/webapp/components/common/report/content/table/foot/Foot.svelte","../../../../typescript/webapp/components/common/report/content/table/Table.svelte","../../../../typescript/webapp/components/reports/SalesReport.svelte","../../../../typescript/webapp/components/reports/DepsReport.svelte","../../../../typescript/webapp/components/Webapp.svelte","../../../../../../typescript/webapp/webapp.ts","../../../../../../typescript/webapp/api/info.ts"],"sourcesContent":["/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n","import { noop } from './utils.js';\n\nexport const is_client = typeof window !== 'undefined';\n\n/** @type {() => number} */\nexport let now = is_client ? () => window.performance.now() : () => Date.now();\n\nexport let raf = is_client ? (cb) => requestAnimationFrame(cb) : noop;\n\n// used internally for testing\n/** @returns {void} */\nexport function set_now(fn) {\n\tnow = fn;\n}\n\n/** @returns {void} */\nexport function set_raf(fn) {\n\traf = fn;\n}\n","import { raf } from './environment.js';\n\nconst tasks = new Set();\n\n/**\n * @param {number} now\n * @returns {void}\n */\nfunction run_tasks(now) {\n\ttasks.forEach((task) => {\n\t\tif (!task.c(now)) {\n\t\t\ttasks.delete(task);\n\t\t\ttask.f();\n\t\t}\n\t});\n\tif (tasks.size !== 0) raf(run_tasks);\n}\n\n/**\n * For testing purposes only!\n * @returns {void}\n */\nexport function clear_loops() {\n\ttasks.clear();\n}\n\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n * @param {import('./private.js').TaskCallback} callback\n * @returns {import('./private.js').Task}\n */\nexport function loop(callback) {\n\t/** @type {import('./private.js').TaskEntry} */\n\tlet task;\n\tif (tasks.size === 0) raf(run_tasks);\n\treturn {\n\t\tpromise: new Promise((fulfill) => {\n\t\t\ttasks.add((task = { c: callback, f: fulfill }));\n\t\t}),\n\t\tabort() {\n\t\t\ttasks.delete(task);\n\t\t}\n\t};\n}\n","/** @type {typeof globalThis} */\nexport const globals =\n\ttypeof window !== 'undefined'\n\t\t? window\n\t\t: typeof globalThis !== 'undefined'\n\t\t? globalThis\n\t\t: // @ts-ignore Node typings have this\n\t\t  global;\n","import { contenteditable_truthy_values, has_prop } from './utils.js';\n\nimport { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst my_children = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmy_children.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = my_children;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seq_len =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seq_len] + 1;\n\t\tconst new_len = seq_len + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[new_len] = i;\n\t\tlongest = Math.max(new_len, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst to_move = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\tto_move.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\tto_move.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\tto_move.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < to_move.length; i++) {\n\t\twhile (j < lis.length && to_move[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(to_move[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tconst lower = prop.toLowerCase(); // for backwards compatibility with existing behavior we do lowercase first\n\tif (lower in node) {\n\t\tnode[lower] = typeof node[lower] === 'boolean' && value === '' ? true : value;\n\t} else if (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/** @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/** @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} process_node\n * @param {() => R} create_node\n * @param {boolean} dont_update_last_index\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, process_node, create_node, dont_update_last_index = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst result_node = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn create_node();\n\t})();\n\tresult_node.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn result_node;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst data_str = '' + data;\n\t\t\tif (node.data.startsWith(data_str)) {\n\t\t\t\tif (node.data.length !== data_str.length) {\n\t\t\t\t\treturn node.splitText(data_str.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = data_str;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tif (claimed_nodes.length === 0) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t'&': '&amp;',\n\t'<': '&lt;'\n};\n\nconst regex_attribute_characters_to_escape = /[\"&<]/g;\n\n/**\n * Note that the attribute itself should be surrounded in double quotes\n * @param {any} attribute\n */\nfunction escape_attribute(attribute) {\n\treturn String(attribute).replace(regex_attribute_characters_to_escape, (match) => escaped[match]);\n}\n\n/**\n * @param {Record<string, string>} attributes\n */\nexport function stringify_spread(attributes) {\n\tlet str = ' ';\n\tfor (const key in attributes) {\n\t\tif (attributes[key] != null) {\n\t\t\tstr += `${key}=\"${escape_attribute(attributes[key])}\" `;\n\t\t}\n\t}\n\n\treturn str;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n","import { append_empty_stylesheet, detach, get_root_for_style } from './dom.js';\nimport { raf } from './environment.js';\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\n/** @type {Map<Document | ShadowRoot, import('./private.d.ts').StyleInformation>} */\nconst managed_styles = new Map();\n\nlet active = 0;\n\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\n/**\n * @param {string} str\n * @returns {number}\n */\nfunction hash(str) {\n\tlet hash = 5381;\n\tlet i = str.length;\n\twhile (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n\treturn hash >>> 0;\n}\n\n/**\n * @param {Document | ShadowRoot} doc\n * @param {Element & ElementCSSInlineStyle} node\n * @returns {{ stylesheet: any; rules: {}; }}\n */\nfunction create_style_information(doc, node) {\n\tconst info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n\tmanaged_styles.set(doc, info);\n\treturn info;\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {number} a\n * @param {number} b\n * @param {number} duration\n * @param {number} delay\n * @param {(t: number) => number} ease\n * @param {(t: number, u: number) => string} fn\n * @param {number} uid\n * @returns {string}\n */\nexport function create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n\tconst step = 16.666 / duration;\n\tlet keyframes = '{\\n';\n\tfor (let p = 0; p <= 1; p += step) {\n\t\tconst t = a + (b - a) * ease(p);\n\t\tkeyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n\t}\n\tconst rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n\tconst name = `__svelte_${hash(rule)}_${uid}`;\n\tconst doc = get_root_for_style(node);\n\tconst { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n\tif (!rules[name]) {\n\t\trules[name] = true;\n\t\tstylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n\t}\n\tconst animation = node.style.animation || '';\n\tnode.style.animation = `${\n\t\tanimation ? `${animation}, ` : ''\n\t}${name} ${duration}ms linear ${delay}ms 1 both`;\n\tactive += 1;\n\treturn name;\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {string} [name]\n * @returns {void}\n */\nexport function delete_rule(node, name) {\n\tconst previous = (node.style.animation || '').split(', ');\n\tconst next = previous.filter(\n\t\tname\n\t\t\t? (anim) => anim.indexOf(name) < 0 // remove specific animation\n\t\t\t: (anim) => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n\t);\n\tconst deleted = previous.length - next.length;\n\tif (deleted) {\n\t\tnode.style.animation = next.join(', ');\n\t\tactive -= deleted;\n\t\tif (!active) clear_rules();\n\t}\n}\n\n/** @returns {void} */\nexport function clear_rules() {\n\traf(() => {\n\t\tif (active) return;\n\t\tmanaged_styles.forEach((info) => {\n\t\t\tconst { ownerNode } = info.stylesheet;\n\t\t\t// there is no ownerNode if it runs on jsdom.\n\t\t\tif (ownerNode) detach(ownerNode);\n\t\t});\n\t\tmanaged_styles.clear();\n\t});\n}\n","import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](https://svelte.dev/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n","import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n","import { identity as linear, is_function, noop, run_all } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\nimport { custom_event } from './dom.js';\nimport { add_render_callback } from './scheduler.js';\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nexport function group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nexport function check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nexport function transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nexport function transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nexport function create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ end(reset: any): void; }}\n */\nexport function create_out_transition(node, fn, params) {\n\t/** @type {TransitionOptions} */\n\tconst options = { direction: 'out' };\n\tlet config = fn(node, params, options);\n\tlet running = true;\n\tlet animation_name;\n\tconst group = outros;\n\tgroup.r += 1;\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\n\n\t\tif ('inert' in node) {\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\tnode.inert = true;\n\t\t}\n\n\t\tloop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(0, 1);\n\t\t\t\t\tdispatch(node, false, 'end');\n\t\t\t\t\tif (!--group.r) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.c);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (is_function(config)) {\n\t\twait().then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconfig = config(options);\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && 'inert' in node) {\n\t\t\t\tnode.inert = original_inert_value;\n\t\t\t}\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nexport function create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro — restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n","import { is_promise } from './utils.js';\nimport { check_outros, group_outros, transition_in, transition_out } from './transitions.js';\nimport { flush } from './scheduler.js';\nimport { get_current_component, set_current_component } from './lifecycle.js';\n\n/**\n * @template T\n * @param {Promise<T>} promise\n * @param {import('./private.js').PromiseInfo<T>} info\n * @returns {boolean}\n */\nexport function handle_promise(promise, info) {\n\tconst token = (info.token = {});\n\t/**\n\t * @param {import('./private.js').FragmentFactory} type\n\t * @param {0 | 1 | 2} index\n\t * @param {number} [key]\n\t * @param {any} [value]\n\t * @returns {void}\n\t */\n\tfunction update(type, index, key, value) {\n\t\tif (info.token !== token) return;\n\t\tinfo.resolved = value;\n\t\tlet child_ctx = info.ctx;\n\t\tif (key !== undefined) {\n\t\t\tchild_ctx = child_ctx.slice();\n\t\t\tchild_ctx[key] = value;\n\t\t}\n\t\tconst block = type && (info.current = type)(child_ctx);\n\t\tlet needs_flush = false;\n\t\tif (info.block) {\n\t\t\tif (info.blocks) {\n\t\t\t\tinfo.blocks.forEach((block, i) => {\n\t\t\t\t\tif (i !== index && block) {\n\t\t\t\t\t\tgroup_outros();\n\t\t\t\t\t\ttransition_out(block, 1, 1, () => {\n\t\t\t\t\t\t\tif (info.blocks[i] === block) {\n\t\t\t\t\t\t\t\tinfo.blocks[i] = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcheck_outros();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tinfo.block.d(1);\n\t\t\t}\n\t\t\tblock.c();\n\t\t\ttransition_in(block, 1);\n\t\t\tblock.m(info.mount(), info.anchor);\n\t\t\tneeds_flush = true;\n\t\t}\n\t\tinfo.block = block;\n\t\tif (info.blocks) info.blocks[index] = block;\n\t\tif (needs_flush) {\n\t\t\tflush();\n\t\t}\n\t}\n\tif (is_promise(promise)) {\n\t\tconst current_component = get_current_component();\n\t\tpromise.then(\n\t\t\t(value) => {\n\t\t\t\tset_current_component(current_component);\n\t\t\t\tupdate(info.then, 1, info.value, value);\n\t\t\t\tset_current_component(null);\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tset_current_component(current_component);\n\t\t\t\tupdate(info.catch, 2, info.error, error);\n\t\t\t\tset_current_component(null);\n\t\t\t\tif (!info.hasCatch) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\t// if we previously had a then/catch block, destroy it\n\t\tif (info.current !== info.pending) {\n\t\t\tupdate(info.pending, 0);\n\t\t\treturn true;\n\t\t}\n\t} else {\n\t\tif (info.current !== info.then) {\n\t\t\tupdate(info.then, 1, info.value, promise);\n\t\t\treturn true;\n\t\t}\n\t\tinfo.resolved = /** @type {T} */ (promise);\n\t}\n}\n\n/** @returns {void} */\nexport function update_await_block_branch(info, ctx, dirty) {\n\tconst child_ctx = ctx.slice();\n\tconst { resolved } = info;\n\tif (info.current === info.then) {\n\t\tchild_ctx[info.value] = resolved;\n\t}\n\tif (info.current === info.catch) {\n\t\tchild_ctx[info.error] = resolved;\n\t}\n\tinfo.block.p(child_ctx, dirty);\n}\n","import {\n\tadd_render_callback,\n\tflush,\n\tflush_render_callbacks,\n\tschedule_update,\n\tdirty_components\n} from './scheduler.js';\nimport { current_component, set_current_component } from './lifecycle.js';\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\nimport {\n\tchildren,\n\tdetach,\n\tstart_hydrating,\n\tend_hydrating,\n\tget_custom_elements_slots,\n\tinsert,\n\telement,\n\tattr\n} from './dom.js';\nimport { transition_in } from './transitions.js';\n\n/** @returns {void} */\nexport function bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nexport function create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nexport function claim_component(block, parent_nodes) {\n\tblock && block.l(parent_nodes);\n}\n\n/** @returns {void} */\nexport function mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nexport function destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n// TODO: Document the other params\n/**\n * @param {SvelteComponent} component\n * @param {import('./public.js').ComponentConstructorOptions} options\n *\n * @param {import('./utils.js')['not_equal']} not_equal Used to compare props and state values.\n * @param {(target: Element | ShadowRoot) => void} [append_styles] Function that appends styles to the DOM when the component is first initialised.\n * This will be the `add_css` function from the compiled component.\n *\n * @returns {void}\n */\nexport function init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles = null,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tstart_hydrating();\n\t\t\t// TODO: what is the correct type here?\n\t\t\t// @ts-expect-error\n\t\t\tconst nodes = children(options.target);\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tend_hydrating();\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\nexport let SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, Function[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.$$l[type]) {\n\t\t\t\tconst idx = this.$$l[type].indexOf(listener);\n\t\t\t\tif (idx >= 0) {\n\t\t\t\t\tthis.$$l[type].splice(idx, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn || this.$$c) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tlet node;\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tc: function create() {\n\t\t\t\t\t\t\t\tnode = element('slot');\n\t\t\t\t\t\t\t\tif (name !== 'default') {\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {HTMLElement} target\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\td: function destroy(detaching) {\n\t\t\t\t\t\t\t\tif (detaching) {\n\t\t\t\t\t\t\t\t\tdetach(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Port over props that were set programmatically before ce was initialized\n\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\tif (!(key in this.$$d) && this[key] !== undefined) {\n\t\t\t\t\t\tthis.$$d[key] = this[key]; // don't transform, these were set through JavaScript\n\t\t\t\t\t\tdelete this[key]; // remove the property that shadows the getter/setter\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = new this.$$ctor({\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$scope: {\n\t\t\t\t\t\t\tctx: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tconst reflect_attributes = () => {\n\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$$r = false;\n\t\t\t\t};\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn && this.$$c) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tObject.keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\taccessors,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tObject.keys(props_definition).forEach((prop) => {\n\t\tObject.defineProperty(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\n\t\t\t}\n\t\t});\n\t});\n\taccessors.forEach((accessor) => {\n\t\tObject.defineProperty(Class.prototype, accessor, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[accessor];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ (Class);\n\treturn Class;\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nexport class SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n","import {\n\tcustom_event,\n\tappend,\n\tappend_hydration,\n\tinsert,\n\tinsert_hydration,\n\tdetach,\n\tlisten,\n\tattr\n} from './dom.js';\nimport { SvelteComponent } from './Component.js';\nimport { is_void } from '../../shared/utils/names.js';\nimport { VERSION } from '../../shared/version.js';\nimport { contenteditable_truthy_values } from './utils.js';\nimport { ensure_array_like } from './each.js';\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @returns {void}\n */\nexport function dispatch_dev(type, detail) {\n\tdocument.dispatchEvent(custom_event(type, { version: VERSION, ...detail }, { bubbles: true }));\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append_dev(target, node) {\n\tdispatch_dev('SvelteDOMInsert', { target, node });\n\tappend(target, node);\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append_hydration_dev(target, node) {\n\tdispatch_dev('SvelteDOMInsert', { target, node });\n\tappend_hydration(target, node);\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert_dev(target, node, anchor) {\n\tdispatch_dev('SvelteDOMInsert', { target, node, anchor });\n\tinsert(target, node, anchor);\n}\n\n/** @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert_hydration_dev(target, node, anchor) {\n\tdispatch_dev('SvelteDOMInsert', { target, node, anchor });\n\tinsert_hydration(target, node, anchor);\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach_dev(node) {\n\tdispatch_dev('SvelteDOMRemove', { node });\n\tdetach(node);\n}\n\n/**\n * @param {Node} before\n * @param {Node} after\n * @returns {void}\n */\nexport function detach_between_dev(before, after) {\n\twhile (before.nextSibling && before.nextSibling !== after) {\n\t\tdetach_dev(before.nextSibling);\n\t}\n}\n\n/**\n * @param {Node} after\n * @returns {void}\n */\nexport function detach_before_dev(after) {\n\twhile (after.previousSibling) {\n\t\tdetach_dev(after.previousSibling);\n\t}\n}\n\n/**\n * @param {Node} before\n * @returns {void}\n */\nexport function detach_after_dev(before) {\n\twhile (before.nextSibling) {\n\t\tdetach_dev(before.nextSibling);\n\t}\n}\n\n/**\n * @param {Node} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @param {boolean} [has_prevent_default]\n * @param {boolean} [has_stop_propagation]\n * @param {boolean} [has_stop_immediate_propagation]\n * @returns {() => void}\n */\nexport function listen_dev(\n\tnode,\n\tevent,\n\thandler,\n\toptions,\n\thas_prevent_default,\n\thas_stop_propagation,\n\thas_stop_immediate_propagation\n) {\n\tconst modifiers =\n\t\toptions === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n\tif (has_prevent_default) modifiers.push('preventDefault');\n\tif (has_stop_propagation) modifiers.push('stopPropagation');\n\tif (has_stop_immediate_propagation) modifiers.push('stopImmediatePropagation');\n\tdispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n\tconst dispose = listen(node, event, handler, options);\n\treturn () => {\n\t\tdispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n\t\tdispose();\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr_dev(node, attribute, value) {\n\tattr(node, attribute, value);\n\tif (value == null) dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n\telse dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\n\n/**\n * @param {Element} node\n * @param {string} property\n * @param {any} [value]\n * @returns {void}\n */\nexport function prop_dev(node, property, value) {\n\tnode[property] = value;\n\tdispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\n\n/**\n * @param {HTMLElement} node\n * @param {string} property\n * @param {any} [value]\n * @returns {void}\n */\nexport function dataset_dev(node, property, value) {\n\tnode.dataset[property] = value;\n\tdispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_dev(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\tdispatch_dev('SvelteDOMSetData', { node: text, data });\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable_dev(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\tdispatch_dev('SvelteDOMSetData', { node: text, data });\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable_dev(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable_dev(text, data);\n\t} else {\n\t\tset_data_dev(text, data);\n\t}\n}\n\nexport function ensure_array_like_dev(arg) {\n\tif (\n\t\ttypeof arg !== 'string' &&\n\t\t!(arg && typeof arg === 'object' && 'length' in arg) &&\n\t\t!(typeof Symbol === 'function' && arg && Symbol.iterator in arg)\n\t) {\n\t\tthrow new Error('{#each} only works with iterable values.');\n\t}\n\treturn ensure_array_like(arg);\n}\n\n/**\n * @returns {void} */\nexport function validate_slots(name, slot, keys) {\n\tfor (const slot_key of Object.keys(slot)) {\n\t\tif (!~keys.indexOf(slot_key)) {\n\t\t\tconsole.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n\t\t}\n\t}\n}\n\n/**\n * @param {unknown} tag\n * @returns {void}\n */\nexport function validate_dynamic_element(tag) {\n\tconst is_string = typeof tag === 'string';\n\tif (tag && !is_string) {\n\t\tthrow new Error('<svelte:element> expects \"this\" attribute to be a string.');\n\t}\n}\n\n/**\n * @param {undefined | string} tag\n * @returns {void}\n */\nexport function validate_void_dynamic_element(tag) {\n\tif (tag && is_void(tag)) {\n\t\tconsole.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n\t}\n}\n\nexport function construct_svelte_component_dev(component, props) {\n\tconst error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n\ttry {\n\t\tconst instance = new component(props);\n\t\tif (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n\t\t\tthrow new Error(error_message);\n\t\t}\n\t\treturn instance;\n\t} catch (err) {\n\t\tconst { message } = err;\n\t\tif (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n\t\t\tthrow new Error(error_message);\n\t\t} else {\n\t\t\tthrow err;\n\t\t}\n\t}\n}\n\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n *\n * Can be used to create strongly typed Svelte components.\n *\n * #### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponent } from \"svelte\";\n * export class MyComponent extends SvelteComponent<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n * @template {Record<string, any>} [Slots=any]\n * @extends {SvelteComponent<Props, Events>}\n */\nexport class SvelteComponentDev extends SvelteComponent {\n\t/**\n\t * For type checking capabilities only.\n\t * Does not exist at runtime.\n\t * ### DO NOT USE!\n\t *\n\t * @type {Props}\n\t */\n\t$$prop_def;\n\t/**\n\t * For type checking capabilities only.\n\t * Does not exist at runtime.\n\t * ### DO NOT USE!\n\t *\n\t * @type {Events}\n\t */\n\t$$events_def;\n\t/**\n\t * For type checking capabilities only.\n\t * Does not exist at runtime.\n\t * ### DO NOT USE!\n\t *\n\t * @type {Slots}\n\t */\n\t$$slot_def;\n\n\t/** @param {import('./public.js').ComponentConstructorOptions<Props>} options */\n\tconstructor(options) {\n\t\tif (!options || (!options.target && !options.$$inline)) {\n\t\t\tthrow new Error(\"'target' is a required option\");\n\t\t}\n\t\tsuper();\n\t}\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tsuper.$destroy();\n\t\tthis.$destroy = () => {\n\t\t\tconsole.warn('Component was already destroyed'); // eslint-disable-line no-console\n\t\t};\n\t}\n\n\t/** @returns {void} */\n\t$capture_state() {}\n\n\t/** @returns {void} */\n\t$inject_state() {}\n}\n/**\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n * @template {Record<string, any>} [Slots=any]\n * @deprecated Use `SvelteComponent` instead. See PR for more information: https://github.com/sveltejs/svelte/pull/8512\n * @extends {SvelteComponentDev<Props, Events, Slots>}\n */\nexport class SvelteComponentTyped extends SvelteComponentDev {}\n\n/** @returns {() => void} */\nexport function loop_guard(timeout) {\n\tconst start = Date.now();\n\treturn () => {\n\t\tif (Date.now() - start > timeout) {\n\t\t\tthrow new Error('Infinite loop detected');\n\t\t}\n\t};\n}\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '4.2.20';\nexport const PUBLIC_VERSION = '4';\n","import { transition_in, transition_out } from './transitions.js';\nimport { run_all } from './utils.js';\n\n// general each functions:\n\nexport function ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n// keyed each functions:\n\n/** @returns {void} */\nexport function destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\n/** @returns {void} */\nexport function outro_and_destroy_block(block, lookup) {\n\ttransition_out(block, 1, 1, () => {\n\t\tlookup.delete(block.key);\n\t});\n}\n\n/** @returns {void} */\nexport function fix_and_destroy_block(block, lookup) {\n\tblock.f();\n\tdestroy_block(block, lookup);\n}\n\n/** @returns {void} */\nexport function fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\n/** @returns {any[]} */\nexport function update_keyed_each(\n\told_blocks,\n\tdirty,\n\tget_key,\n\tdynamic,\n\tctx,\n\tlist,\n\tlookup,\n\tnode,\n\tdestroy,\n\tcreate_each_block,\n\tnext,\n\tget_context\n) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\tconst updates = [];\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\t// defer updates until all the DOM shuffling is done\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\n\t\t}\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\t/** @returns {void} */\n\tfunction insert(block) {\n\t\ttransition_in(block, 1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t} else if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t} else if (did_move.has(old_key)) {\n\t\t\to--;\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\twhile (n) insert(new_blocks[n - 1]);\n\trun_all(updates);\n\treturn new_blocks;\n}\n\n/** @returns {void} */\nexport function validate_each_keys(ctx, list, get_context, get_key) {\n\tconst keys = new Map();\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst key = get_key(get_context(ctx, list, i));\n\t\tif (keys.has(key)) {\n\t\t\tlet value = '';\n\t\t\ttry {\n\t\t\t\tvalue = `with value '${String(key)}' `;\n\t\t\t} catch (e) {\n\t\t\t\t// can't stringify\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot have duplicate keys in a keyed each: Keys at index ${keys.get(\n\t\t\t\t\tkey\n\t\t\t\t)} and ${i} ${value}are duplicates`\n\t\t\t);\n\t\t}\n\t\tkeys.set(key, i);\n\t}\n}\n","/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nexport { identity as linear } from '../internal/index.js';\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function backInOut(t) {\n\tconst s = 1.70158 * 1.525;\n\tif ((t *= 2) < 1) return 0.5 * (t * t * ((s + 1) * t - s));\n\treturn 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function backIn(t) {\n\tconst s = 1.70158;\n\treturn t * t * ((s + 1) * t - s);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function backOut(t) {\n\tconst s = 1.70158;\n\treturn --t * t * ((s + 1) * t + s) + 1;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function bounceOut(t) {\n\tconst a = 4.0 / 11.0;\n\tconst b = 8.0 / 11.0;\n\tconst c = 9.0 / 10.0;\n\tconst ca = 4356.0 / 361.0;\n\tconst cb = 35442.0 / 1805.0;\n\tconst cc = 16061.0 / 1805.0;\n\tconst t2 = t * t;\n\treturn t < a\n\t\t? 7.5625 * t2\n\t\t: t < b\n\t\t? 9.075 * t2 - 9.9 * t + 3.4\n\t\t: t < c\n\t\t? ca * t2 - cb * t + cc\n\t\t: 10.8 * t * t - 20.52 * t + 10.72;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function bounceInOut(t) {\n\treturn t < 0.5 ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0)) : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function bounceIn(t) {\n\treturn 1.0 - bounceOut(1.0 - t);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function circInOut(t) {\n\tif ((t *= 2) < 1) return -0.5 * (Math.sqrt(1 - t * t) - 1);\n\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function circIn(t) {\n\treturn 1.0 - Math.sqrt(1.0 - t * t);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function circOut(t) {\n\treturn Math.sqrt(1 - --t * t);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function cubicInOut(t) {\n\treturn t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function cubicIn(t) {\n\treturn t * t * t;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function cubicOut(t) {\n\tconst f = t - 1.0;\n\treturn f * f * f + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function elasticInOut(t) {\n\treturn t < 0.5\n\t\t? 0.5 * Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) * Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n\t\t: 0.5 *\n\t\t\t\tMath.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n\t\t\t\tMath.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n\t\t\t\t1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function elasticIn(t) {\n\treturn Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function elasticOut(t) {\n\treturn Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function expoInOut(t) {\n\treturn t === 0.0 || t === 1.0\n\t\t? t\n\t\t: t < 0.5\n\t\t? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n\t\t: -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function expoIn(t) {\n\treturn t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function expoOut(t) {\n\treturn t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quadInOut(t) {\n\tt /= 0.5;\n\tif (t < 1) return 0.5 * t * t;\n\tt--;\n\treturn -0.5 * (t * (t - 2) - 1);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quadIn(t) {\n\treturn t * t;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quadOut(t) {\n\treturn -t * (t - 2.0);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quartInOut(t) {\n\treturn t < 0.5 ? +8.0 * Math.pow(t, 4.0) : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quartIn(t) {\n\treturn Math.pow(t, 4.0);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quartOut(t) {\n\treturn Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quintInOut(t) {\n\tif ((t *= 2) < 1) return 0.5 * t * t * t * t * t;\n\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quintIn(t) {\n\treturn t * t * t * t * t;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quintOut(t) {\n\treturn --t * t * t * t * t + 1;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function sineInOut(t) {\n\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function sineIn(t) {\n\tconst v = Math.cos(t * Math.PI * 0.5);\n\tif (Math.abs(v) < 1e-14) return 1;\n\telse return 1 - v;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function sineOut(t) {\n\treturn Math.sin((t * Math.PI) / 2);\n}\n","import { cubicOut, cubicInOut, linear } from '../easing/index.js';\nimport { assign, split_css_unit, is_function } from '../internal/index.js';\n\n/**\n * Animates a `blur` filter alongside an element's opacity.\n *\n * https://svelte.dev/docs/svelte-transition#blur\n * @param {Element} node\n * @param {import('./public').BlurParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function blur(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst f = style.filter === 'none' ? '' : style.filter;\n\tconst od = target_opacity * (1 - opacity);\n\tconst [value, unit] = split_css_unit(amount);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_t, u) => `opacity: ${target_opacity - od * u}; filter: ${f} blur(${u * value}${unit});`\n\t};\n}\n\n/**\n * Animates the opacity of an element from 0 to the current opacity for `in` transitions and from the current opacity to 0 for `out` transitions.\n *\n * https://svelte.dev/docs/svelte-transition#fade\n * @param {Element} node\n * @param {import('./public').FadeParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function fade(node, { delay = 0, duration = 400, easing = linear } = {}) {\n\tconst o = +getComputedStyle(node).opacity;\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t) => `opacity: ${t * o}`\n\t};\n}\n\n/**\n * Animates the x and y positions and the opacity of an element. `in` transitions animate from the provided values, passed as parameters to the element's default values. `out` transitions animate from the element's default values to the provided values.\n *\n * https://svelte.dev/docs/svelte-transition#fly\n * @param {Element} node\n * @param {import('./public').FlyParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function fly(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst transform = style.transform === 'none' ? '' : style.transform;\n\tconst od = target_opacity * (1 - opacity);\n\tconst [xValue, xUnit] = split_css_unit(x);\n\tconst [yValue, yUnit] = split_css_unit(y);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * xValue}${xUnit}, ${(1 - t) * yValue}${yUnit});\n\t\t\topacity: ${target_opacity - od * u}`\n\t};\n}\n\n/**\n * Slides an element in and out.\n *\n * https://svelte.dev/docs/svelte-transition#slide\n * @param {Element} node\n * @param {import('./public').SlideParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function slide(node, { delay = 0, duration = 400, easing = cubicOut, axis = 'y' } = {}) {\n\tconst style = getComputedStyle(node);\n\tconst opacity = +style.opacity;\n\tconst primary_property = axis === 'y' ? 'height' : 'width';\n\tconst primary_property_value = parseFloat(style[primary_property]);\n\tconst secondary_properties = axis === 'y' ? ['top', 'bottom'] : ['left', 'right'];\n\tconst capitalized_secondary_properties = secondary_properties.map(\n\t\t(e) => `${e[0].toUpperCase()}${e.slice(1)}`\n\t);\n\tconst padding_start_value = parseFloat(style[`padding${capitalized_secondary_properties[0]}`]);\n\tconst padding_end_value = parseFloat(style[`padding${capitalized_secondary_properties[1]}`]);\n\tconst margin_start_value = parseFloat(style[`margin${capitalized_secondary_properties[0]}`]);\n\tconst margin_end_value = parseFloat(style[`margin${capitalized_secondary_properties[1]}`]);\n\tconst border_width_start_value = parseFloat(\n\t\tstyle[`border${capitalized_secondary_properties[0]}Width`]\n\t);\n\tconst border_width_end_value = parseFloat(\n\t\tstyle[`border${capitalized_secondary_properties[1]}Width`]\n\t);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t) =>\n\t\t\t'overflow: hidden;' +\n\t\t\t`opacity: ${Math.min(t * 20, 1) * opacity};` +\n\t\t\t`${primary_property}: ${t * primary_property_value}px;` +\n\t\t\t`padding-${secondary_properties[0]}: ${t * padding_start_value}px;` +\n\t\t\t`padding-${secondary_properties[1]}: ${t * padding_end_value}px;` +\n\t\t\t`margin-${secondary_properties[0]}: ${t * margin_start_value}px;` +\n\t\t\t`margin-${secondary_properties[1]}: ${t * margin_end_value}px;` +\n\t\t\t`border-${secondary_properties[0]}-width: ${t * border_width_start_value}px;` +\n\t\t\t`border-${secondary_properties[1]}-width: ${t * border_width_end_value}px;`\n\t};\n}\n\n/**\n * Animates the opacity and scale of an element. `in` transitions animate from an element's current (default) values to the provided values, passed as parameters. `out` transitions animate from the provided values to an element's default values.\n *\n * https://svelte.dev/docs/svelte-transition#scale\n * @param {Element} node\n * @param {import('./public').ScaleParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function scale(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst transform = style.transform === 'none' ? '' : style.transform;\n\tconst sd = 1 - start;\n\tconst od = target_opacity * (1 - opacity);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - sd * u});\n\t\t\topacity: ${target_opacity - od * u}\n\t\t`\n\t};\n}\n\n/**\n * Animates the stroke of an SVG element, like a snake in a tube. `in` transitions begin with the path invisible and draw the path to the screen over time. `out` transitions start in a visible state and gradually erase the path. `draw` only works with elements that have a `getTotalLength` method, like `<path>` and `<polyline>`.\n *\n * https://svelte.dev/docs/svelte-transition#draw\n * @param {SVGElement & { getTotalLength(): number }} node\n * @param {import('./public').DrawParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function draw(node, { delay = 0, speed, duration, easing = cubicInOut } = {}) {\n\tlet len = node.getTotalLength();\n\tconst style = getComputedStyle(node);\n\tif (style.strokeLinecap !== 'butt') {\n\t\tlen += parseInt(style.strokeWidth);\n\t}\n\tif (duration === undefined) {\n\t\tif (speed === undefined) {\n\t\t\tduration = 800;\n\t\t} else {\n\t\t\tduration = len / speed;\n\t\t}\n\t} else if (typeof duration === 'function') {\n\t\tduration = duration(len);\n\t}\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_, u) => `\n\t\t\tstroke-dasharray: ${len};\n\t\t\tstroke-dashoffset: ${u * len};\n\t\t`\n\t};\n}\n\n/**\n * The `crossfade` function creates a pair of [transitions](https://svelte.dev/docs#template-syntax-element-directives-transition-fn) called `send` and `receive`. When an element is 'sent', it looks for a corresponding element being 'received', and generates a transition that transforms the element to its counterpart's position and fades it out. When an element is 'received', the reverse happens. If there is no counterpart, the `fallback` transition is used.\n *\n * https://svelte.dev/docs/svelte-transition#crossfade\n * @param {import('./public').CrossfadeParams & {\n * \tfallback?: (node: Element, params: import('./public').CrossfadeParams, intro: boolean) => import('./public').TransitionConfig;\n * }} params\n * @returns {[(node: any, params: import('./public').CrossfadeParams & { key: any; }) => () => import('./public').TransitionConfig, (node: any, params: import('./public').CrossfadeParams & { key: any; }) => () => import('./public').TransitionConfig]}\n */\nexport function crossfade({ fallback, ...defaults }) {\n\t/** @type {Map<any, Element>} */\n\tconst to_receive = new Map();\n\t/** @type {Map<any, Element>} */\n\tconst to_send = new Map();\n\t/**\n\t * @param {Element} from_node\n\t * @param {Element} node\n\t * @param {import('./public').CrossfadeParams} params\n\t * @returns {import('./public').TransitionConfig}\n\t */\n\tfunction crossfade(from_node, node, params) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = (d) => Math.sqrt(d) * 30,\n\t\t\teasing = cubicOut\n\t\t} = assign(assign({}, defaults), params);\n\t\tconst from = from_node.getBoundingClientRect();\n\t\tconst to = node.getBoundingClientRect();\n\t\tconst dx = from.left - to.left;\n\t\tconst dy = from.top - to.top;\n\t\tconst dw = from.width / to.width;\n\t\tconst dh = from.height / to.height;\n\t\tconst d = Math.sqrt(dx * dx + dy * dy);\n\t\tconst style = getComputedStyle(node);\n\t\tconst transform = style.transform === 'none' ? '' : style.transform;\n\t\tconst opacity = +style.opacity;\n\t\treturn {\n\t\t\tdelay,\n\t\t\tduration: is_function(duration) ? duration(d) : duration,\n\t\t\teasing,\n\t\t\tcss: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${\n\t\t\t\tt + (1 - t) * dh\n\t\t\t});\n\t\t\t`\n\t\t};\n\t}\n\n\t/**\n\t * @param {Map<any, Element>} items\n\t * @param {Map<any, Element>} counterparts\n\t * @param {boolean} intro\n\t * @returns {(node: any, params: import('./public').CrossfadeParams & { key: any; }) => () => import('./public').TransitionConfig}\n\t */\n\tfunction transition(items, counterparts, intro) {\n\t\treturn (node, params) => {\n\t\t\titems.set(params.key, node);\n\t\t\treturn () => {\n\t\t\t\tif (counterparts.has(params.key)) {\n\t\t\t\t\tconst other_node = counterparts.get(params.key);\n\t\t\t\t\tcounterparts.delete(params.key);\n\t\t\t\t\treturn crossfade(other_node, node, params);\n\t\t\t\t}\n\t\t\t\t// if the node is disappearing altogether\n\t\t\t\t// (i.e. wasn't claimed by the other list)\n\t\t\t\t// then we need to supply an outro\n\t\t\t\titems.delete(params.key);\n\t\t\t\treturn fallback && fallback(node, params, intro);\n\t\t\t};\n\t\t};\n\t}\n\treturn [transition(to_send, to_receive, false), transition(to_receive, to_send, true)];\n}\n","import { PUBLIC_VERSION } from '../../../shared/version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n","const rootPath = '/' + document.location.pathname.split('/')[1],\r\n    resourcesPath = rootPath + '/resources'\r\n\r\nexport const\r\n\r\n    serverLocations = {\r\n        images: `${resourcesPath}/img/`,\r\n        styles: `${resourcesPath}/css/`,\r\n        modules: `${resourcesPath}/js/`,\r\n        appinfo: `${rootPath}/appinfo`,\r\n        userinfo: `${rootPath}/userinfo`,\r\n        export: `${rootPath}/report/export`,\r\n        options: `${rootPath}/options`,\r\n        report: `${rootPath}/report`,\r\n        dataSources: `${rootPath}/datasources`,\r\n        serviceBank: `/servicebank/getdata`\r\n    },\r\n    serverErrors: {[name in (keyof typeof serverLocations)]: string} = {\r\n        images: \"Не удалось загрузить картинку\",\r\n        styles: \"Не удалось загрузить стиль\",\r\n        modules: \"Не удалось загрузить модуль\",\r\n        appinfo: \"Не удалось загрузить информацию о приложении\",\r\n        userinfo: \"Не удалось загрузить информацию о пользователе\",\r\n        export: \"Не удалось экспортировать\",\r\n        options: \"Не удалось загрузить опции\",\r\n        report: \"Ошибка отчёта\",\r\n        dataSources: \"Не удалось загрузить источники данных\",\r\n        serviceBank: \"Не удалось загрузить данные из банка микросервисов\"\r\n    },\r\n\r\n    virtualSelectProperties = {\r\n        additionalClasses: \"multiselect\",\r\n        disabled: true,\r\n        autofocus: false,\r\n        markSearchResults: true,\r\n        zIndex: 1000,\r\n        optionsCount: 6,\r\n        maxWidth: \"100%\",\r\n        position: \"bottom\",\r\n        disableAllOptionsSelectedText: true,\r\n        // selectAllOnlyVisible: true,\r\n        placeholder: \"\",\r\n        noOptionsText: \"Варианты не найдены\",\r\n        noSearchResultsText: \"Результатов не найдено\",\r\n        selectAllText: \"Выбрать все\",\r\n        searchPlaceholderText: \"Поиск...\",\r\n        optionsSelectedText: \"(выбрано)\",\r\n        optionSelectedText: \"вариант выбран\",\r\n        allOptionsSelectedText: \"Все\",\r\n        clearButtonText: \"Очистить\",\r\n        moreText: \"ещё...\"\r\n    },\r\n    sweetAlertProperties = {\r\n        confirmButtonColor: \"var(--primary-color)\",\r\n        showCloseButton: true,\r\n        allowEnterKey: false,\r\n        showConfirmButton: false\r\n    },\r\n    tableText = {\r\n        total: \"Итого\"\r\n    }","import {serverLocations} from \"../properties\";\r\n\r\nconst\r\n    stylesPromises  = new Map<string, Promise<any>>(),\r\n    modulesPromises = new Map<string, Promise<any>>()\r\n\r\nexport const resolveStyle = (name: string) => {\r\n    if(!stylesPromises.has(name))\r\n        stylesPromises.set(name, new Promise((resolve, reject) => {\r\n            const link = document.createElement('link')\r\n            link.rel = 'stylesheet'\r\n            link.href = `${serverLocations.styles}${name}.css`\r\n            link.onload = resolve\r\n            link.onerror = reject\r\n            document.head.appendChild(link)\r\n        }))\r\n\r\n    return stylesPromises.get(name)\r\n}\r\n\r\nexport const resolveStyles = (...names: string[]) => Promise.all(names.map(resolveStyle))\r\n\r\nexport const resolveModule = (name: string) =>\r\n    promisePromise(name, modulesPromises, import(`${serverLocations.modules}${name}.js`))\r\n\r\n\r\nfunction promisePromise<T>(promiseName: string,\r\n                           promiseContainer: Map<string, Promise<any>>,\r\n                           promise: Promise<T>): Promise<T>{\r\n\r\n    if(!promiseContainer.has(promiseName))\r\n        promiseContainer.set(promiseName, promise)\r\n\r\n    return promiseContainer.get(promiseName)\r\n}\r\n\r\n","<script lang=\"ts\">\r\n\r\n    import {fade} from \"svelte/transition\"\r\n    import {resolveStyle} from \"../../../util/resolver\";\r\n\r\n</script>\r\n\r\n{#await resolveStyle(\"loader\")}\r\n    <p>Загрузка...</p>\r\n{:then _}\r\n    <div class=\"loader\"\r\n         in:fade>\r\n        <svg class=\"circular-loader\" viewBox=\"25 25 50 50\">\r\n            <circle class=\"loader-path\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke-width=\"2\"/>\r\n        </svg>\r\n    </div>\r\n{/await}","<script lang=\"ts\">\r\n\r\n    import Loading from \"./Loading.svelte\"\r\n    import {resolveStyle} from \"../../../util/resolver\"\r\n\r\n    export let\r\n        tabs: string[] = [],\r\n        pickedTab: string\r\n\r\n    $: indices = Array.from(Array(tabs.length).keys()).map(index => Number(index))\r\n</script>\r\n\r\n{#await resolveStyle(\"tabs\")}\r\n    <Loading/>\r\n{:then _}\r\n    <div class=\"tabs\">\r\n        <div class=\"header\">\r\n            {#each indices as index}\r\n                <button class=\"tab\"\r\n                        class:active={pickedTab === tabs[index]}\r\n                        on:click={() => pickedTab = tabs[index]}>{tabs[index]}</button>\r\n            {/each}\r\n        </div>\r\n\r\n        <div class=\"content\">\r\n            <slot/>\r\n        </div>\r\n    </div>\r\n{/await}","\r\nexport abstract class Module {\r\n\r\n    destroy(){\r\n\r\n    }\r\n}","import {Module} from \"./abstract/Module\"\r\nimport {resolveStyle} from \"../util/resolver\"\r\nimport swal, {SweetAlertOptions, SweetAlertPosition, SweetAlertResult} from \"sweetalert2\"\r\nimport {sweetAlertProperties} from \"../properties\"\r\n\r\nresolveStyle(\"third-party/sweetalert2\")\r\nresolveStyle(\"third-party/animate\")\r\n\r\nexport class SweetAlertModule extends Module {\r\n\r\n    private mouseEvent: MouseEvent\r\n\r\n    constructor() {\r\n        super()\r\n        document.addEventListener(\"mousemove\", event => this.mouseEvent = event)\r\n    }\r\n\r\n    alert(options: SweetAlertOptions): Promise<SweetAlertResult>{\r\n        const position = this.getSweetMousePosition()\r\n        // @ts-ignore\r\n        return swal.fire({\r\n            position,\r\n            ...sweetAlertProperties,\r\n            ...options,\r\n            showClass: {popup: 'animate__animated '+getAnimationShowClass(position)},\r\n            hideClass: {popup: 'animate__animated animate__zoomOut'},\r\n        })\r\n    }\r\n\r\n    private getSweetMousePosition(): SweetAlertPosition{\r\n        if(!this.mouseEvent) return \"center\"\r\n\r\n        const { clientX, clientY } = this.mouseEvent,\r\n            screenWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth,\r\n            screenHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight,\r\n            horizontalPosition = clientX <= screenWidth / 3 ? 'left' : clientX >= (screenWidth / 3) * 2 ? 'right' : 'center',\r\n            verticalPosition = clientY <= screenHeight / 3 ? 'top' : clientY >= (screenHeight / 3) * 2 ? 'bottom' : 'center',\r\n            position = `${verticalPosition}-${horizontalPosition}`\r\n\r\n        return position === \"top-center\" ? \"top\" : position === \"bottom-center\" ? \"bottom\" : position as SweetAlertPosition\r\n    }\r\n}\r\n\r\nfunction getAnimationShowClass(position: SweetAlertPosition): string{\r\n    switch (position) {\r\n        case \"top-left\"     : return \"animate__fadeInTopLeft\"\r\n        case \"top\"          : return \"animate__fadeInDown\"\r\n        case \"top-right\"    : return \"animate__fadeInTopRight\"\r\n        case \"center-left\"  : return \"animate__fadeInLeft\"\r\n        case \"center\"       : return \"animate__fadeIn\"\r\n        case \"center-right\" : return \"animate__fadeInRight\"\r\n        case \"bottom-left\"  : return \"animate__fadeInBottomLeft\"\r\n        case \"bottom\"       : return \"animate__fadeInUp\"\r\n        case \"bottom-right\" : return \"animate__fadeInBottomRight\"\r\n        default             : return \"\"\r\n    }\r\n}","import {SweetAlertModule} from \"../.././webapp/third-party/SweetAlertModule\"\r\n\r\nconst sweet = new SweetAlertModule()\r\n\r\nexport function popupMessage(title?: string, text?: string){\r\n    sweet.alert({title, text})\r\n}\r\n\r\nexport function popupList(title?: string, list?: (string | { icon: string, text: string })[], footer?: string){\r\n    sweet.alert({\r\n        title,\r\n        html:`<ul>${list.map(item => `<li style='list-style-type: \"${typeof item === \"object\" ? item.icon + \"\\t\" : \"\"}\"'>${typeof item === \"object\" ? item.text : item}</li>`).join(\"\")}</ul>`,\r\n        footer\r\n    })\r\n}\r\n\r\n\r\nexport function popupAction(title?: string, text?: string, confirmButtonText?: string, onConfirm?: () => void){\r\n    sweet.alert({\r\n        title,\r\n        text,\r\n        confirmButtonText,\r\n        showConfirmButton: true\r\n    }).then(result => {\r\n        if(result.isConfirmed)\r\n            onConfirm()\r\n    })\r\n}\r\n\r\nexport function popupRadioAction(title: string, text: string, radios: {[value: string]: string}, confirmButtonText?: string, onConfirm?: (value: string) => void){\r\n    sweet.alert({\r\n        title,\r\n        text,\r\n        confirmButtonText,\r\n        showConfirmButton: true,\r\n        inputOptions: radios,\r\n        input: \"radio\",\r\n        inputValue: Object.keys(radios)[0],\r\n        inputValidator: (value) => {\r\n            if (!value) {\r\n                return \"выберите вариант\"\r\n            }\r\n        }\r\n    }).then(result => {\r\n        if(result.isConfirmed)\r\n            onConfirm(result.value)\r\n    })\r\n}\r\n\r\nexport function popupTimeoutAction(text?: string, confirmButtonText?: string, onConfirm?: () => void){\r\n    sweet.alert({\r\n        text, confirmButtonText,\r\n        showConfirmButton: true,\r\n        timer: 5000,\r\n        timerProgressBar: true,\r\n        backdrop: false\r\n    }).then(result => {\r\n        if(result.isConfirmed)\r\n            onConfirm()\r\n    })\r\n}\r\n\r\nexport function popupError(error?: Error, footer?: string){\r\n    return sweet.alert({title: error.name, text: error.message, icon: \"error\", footer})\r\n    // throw error/**/\r\n}\r\n\r\nexport function popupTextInput(title?: string, text?: string, confirmButtonText?: string, onConfirm?: (value: string) => void){\r\n    sweet.alert({\r\n        title,\r\n        text,\r\n        confirmButtonText,\r\n        showConfirmButton: true,\r\n        input: \"text\",\r\n        inputValidator: (value) => {\r\n            if (!value) {\r\n                return \"введите текст\"\r\n            }\r\n        }\r\n    }).then(result => {\r\n        if(result.isConfirmed)\r\n            onConfirm(result.value)\r\n    })\r\n}","<script lang=\"ts\">\r\n\r\n    import {serverLocations} from \"../../../properties\"\r\n\r\n    export let\r\n        name: string,\r\n        hint: string = \"\",\r\n        alt: string = hint,\r\n        location: string = serverLocations.images\r\n\r\n</script>\r\n\r\n<img src=\"{location}{name}\" {alt} title={hint}/>","<script lang=\"ts\">\r\n\r\n    import Image from \"../misc/Image.svelte\"\r\n\r\n    export let\r\n        disabled      = false,\r\n        active        = false,\r\n\r\n        frameless     = false,\r\n        submit        = false,\r\n        cancel        = false,\r\n        size: \"small\" | \"medium\" | \"large\" = \"medium\",\r\n\r\n        hint          = \"\",\r\n        text          = \"\",\r\n        image         = \"\",\r\n        imageLocation = undefined,\r\n        root: HTMLButtonElement = null\r\n\r\n</script>\r\n\r\n<button class:disabled\r\n        class:frameless\r\n        class:submit\r\n        class:cancel\r\n        class:active\r\n        class={size}\r\n        title={hint}\r\n        bind:this={root}\r\n        on:click={event => event.preventDefault()}\r\n        on:click\r\n        on:mouseenter\r\n        on:mousedown\r\n        on:mouseup>\r\n\r\n    {#if image && image.length > 0}\r\n        <Image {hint}\r\n               name={image}\r\n               location={imageLocation}/>\r\n    {/if}\r\n\r\n    {text}\r\n\r\n    <slot/>\r\n\r\n</button>","<script lang=\"ts\">\r\n    import {fade} from \"svelte/transition\"\r\n    import {popupAction, popupList} from \"../../../util/alert\";\r\n    import {appInfo} from \"../../../webapp\";\r\n    import Button from \"../input/Button.svelte\";\r\n\r\n\r\n    function showAppInfo(){\r\n        popupList(\r\n            \"Информация\",\r\n            [\r\n                {icon: \"🛈\", text: \"Версия программы: \" + (appInfo.version ?? \"\")},\r\n                {icon: \"🗓\", text: \"Дата обновления: \"  + (appInfo.updateDate ?? \"\")},\r\n                {icon: \"👤\", text: \"Технолог: \"        + (appInfo.technologistName ?? \"\")}\r\n            ],\r\n            appInfo.comment ?? \"\"\r\n        )\r\n    }\r\n\r\n    function showHelpDownloader(){\r\n        popupAction(\r\n            \"Руководство\",\r\n            appInfo.description ?? \"\",\r\n            \"Скачать инструкцию\",\r\n            () => downloadUserManual(appInfo.helpPath ?? \"\")\r\n        )\r\n    }\r\n\r\n    function downloadUserManual(href: string){\r\n        const link = document.createElement('a')\r\n        link.href = href\r\n        link.target = '_blank'\r\n        document.body.appendChild(link)\r\n        link.click()\r\n        document.body.removeChild(link)\r\n    }\r\n\r\n</script>\r\n\r\n<header id=\"header\">\r\n    <a href=\"{appInfo.groupPath}\" transition:fade>\r\n        {appInfo.groupName}\r\n    </a>|<p transition:fade>\r\n        {appInfo.name}\r\n    </p>\r\n    <Button frameless hint=\"Сброс\"                    image=\"reset.svg\" on:click={() => location.reload()}/>\r\n    <Button frameless hint=\"Информация о приложении\"  image=\"info.svg\"  on:click={showAppInfo}/>\r\n    <Button frameless hint=\"Руководство пользователя\" image=\"help.svg\"  on:click={showHelpDownloader}/>\r\n</header>","<script lang=\"ts\">\r\n    import {resolveStyles} from \"../../util/resolver\"\r\n    import Loading from \"./misc/Loading.svelte\"\r\n    import Header from \"./navigation/Header.svelte\"\r\n    import ToTopButton from \"./navigation/ToTopButton.svelte\"\r\n    import Fix from \"./misc/Fix.svelte\"\r\n\r\n    let scrollY: number,\r\n        innerHeight: number,\r\n        outerHeight: number\r\n\r\n</script>\r\n\r\n{#await resolveStyles(\"global\", \"header\", \"inputs\", \"states\", \"formation\")}\r\n    <Loading/>\r\n{:then _}\r\n    <Header/>\r\n\r\n    <slot/>\r\n\r\n    <!--{#if scrollY > 100}-->\r\n    <!--    <Fix right={true}-->\r\n    <!--         bottom={true}>-->\r\n    <!--        <ToTopButton/>-->\r\n    <!--    </Fix>-->\r\n    <!--{/if}-->\r\n{/await}\r\n\r\n<svelte:window bind:scrollY\r\n               bind:innerHeight\r\n               bind:outerHeight/>","<script lang=\"ts\">\r\n\r\n    export let\r\n        title: string = null,\r\n        size = 1,\r\n        className = \"\"\r\n\r\n    let gridElement: HTMLDivElement\r\n\r\n    $: if(gridElement){\r\n        // gridElement.style.gridTemplateColumns = `repeat(${size}, calc((100% - ${size-1} * var(--indent)) / ${size}))`;\r\n        gridElement.style.gridTemplateColumns = `repeat(${size}, 1fr)`;\r\n    }\r\n\r\n</script>\r\n\r\n<div class=\"grid-wrapper\">\r\n    {#if title}\r\n        <div class=\"header\">\r\n            {#if title}\r\n                <p>{title}</p>\r\n            {/if}\r\n            <slot name=\"header\"/>\r\n        </div>\r\n    {/if}\r\n\r\n    <div class=\"{className} grid\"\r\n         bind:this={gridElement}>\r\n        <slot/>\r\n    </div>\r\n</div>","<script lang=\"ts\">\r\n\r\n    import {fade} from \"svelte/transition\"\r\n    import Grid from \"../misc/Grid.svelte\"\r\n\r\n    export let\r\n        title: string = '',\r\n        size: number = 4\r\n\r\n</script>\r\n\r\n<div class=\"section\"\r\n     transition:fade>\r\n\r\n    <Grid className=\"fields\"\r\n          {title}\r\n          {size}>\r\n\r\n        <slot/>\r\n\r\n    </Grid>\r\n</div>","<script lang=\"ts\">\r\n    import Section from \"./Section.svelte\"\r\n    import {createEventDispatcher, onMount, tick} from \"svelte\"\r\n    import {fade} from \"svelte/transition\"\r\n    import Report from \"../report/Report.svelte\"\r\n    import {resolveStyle} from \"../../../util/resolver\";\r\n    import Loading from \"../misc/Loading.svelte\";\r\n    import Button from \"../input/Button.svelte\";\r\n\r\n    const dispatch = createEventDispatcher(),\r\n        SUBMIT_EVENT = \"submit\"\r\n\r\n    export let\r\n        values: {[fieldId: string]: any},\r\n        submitIsTouched = false,\r\n        isWrong         = false\r\n\r\n\r\n    async function handleSubmit(){\r\n        dispatch(SUBMIT_EVENT, {formValues: values})\r\n    }\r\n\r\n</script>\r\n\r\n{#await resolveStyle(\"form\")}\r\n    <Loading/>\r\n{:then _}\r\n    <form in:fade={{duration: 200}}>\r\n\r\n        <slot/>\r\n\r\n        <div class=\"buttons\">\r\n            <Button submit\r\n                    text={\"Подтвердить\"}\r\n                    disabled={submitIsTouched && isWrong}\r\n                    on:click={() => handleSubmit()}\r\n                    on:mouseenter={() => submitIsTouched = true}/>\r\n        </div>\r\n    </form>\r\n    <!--{JSON.stringify(value)}-->\r\n{/await}","<script lang=\"ts\">\r\n\r\n    import {slide, fade} from \"svelte/transition\"\r\n    import {onMount} from \"svelte\"\r\n\r\n    export let\r\n        title      = \"\",\r\n        info       = \"\",\r\n        message    = \"\",\r\n        isWrong    = false,\r\n        isReady    = false\r\n \r\n    onMount(() => {\r\n        isReady = true\r\n    })\r\n\r\n</script>\r\n\r\n<div class=\"field\"\r\n     {title}\r\n     class:wrong={isWrong}\r\n     transition:fade>\r\n\r\n    <div class=\"header\">\r\n        <p>\r\n            {title}\r\n        </p>\r\n        {#if info}\r\n            <span title=\"{info}\">\r\n                🛈\r\n            </span>\r\n        {/if}\r\n    </div>\r\n\r\n    <slot/>\r\n\r\n    {#if message?.length > 0}\r\n        <span class=\"message\"\r\n              class:wrong={isWrong}\r\n              transition:slide>\r\n            {message}\r\n        </span>\r\n    {/if}\r\n</div>","// Returns vararg items as a Set of the vararg items\r\nexport function setOf<T>(...items: T[]): Set<T>{\r\n    return new Set(items)\r\n}\r\n\r\n// Returns a basic number from gotten string if this is possible, or 0 if not\r\nexport function numberOf(word: string|number): number {\r\n    return isNaN(Number(word)) ? 0 : Number(word)\r\n}\r\n\r\n// Returns a Map consisting of the vararg Maps\r\nexport function concatMaps(...maps: Map<any, any>[]): Map<any, any>{\r\n    const buffer = []\r\n    maps.forEach(map => {\r\n        buffer.push(...map.entries())\r\n    })\r\n    return new Map(buffer)\r\n}\r\n\r\n// Returns sorted by key Map\r\nexport function sortMap<K, V>(contentMap: Map<K, V>): Map<K, V>{\r\n    return new Map([...contentMap.entries()].sort(\r\n        (a : [K, V], b : [K, V]) : number => a[0] > b[0] ? 1 : a[0] < b[0] ? -1 : 0\r\n    ))\r\n}\r\n\r\nexport function filterMap<K, V>(map: Map<K, V>, filter: (value: V, key: K) => boolean): Map<K, V> {\r\n    return new Map(Array.from(map).filter(([key, value]) => filter(value, key)))\r\n}\r\n\r\nexport function mapToJson<V>(map: Map<string, V>): {[k: string]: V} {\r\n    const obj: {[k: string]: V} = {}\r\n    map.forEach((value, key) => obj[key] = value)\r\n    return obj\r\n}\r\n\r\nexport function jsonToMap<V>(json: object): Map<string, V> {\r\n    const map: Map<string, V> = new Map()\r\n    if(json)\r\n        for (const key in json)\r\n            map.set(key, json[key])\r\n\r\n    return map\r\n}\r\n\r\nexport function equal(a: any, b: any): boolean{\r\n    return JSON.stringify(a ?? null) === JSON.stringify(b ?? null)\r\n}\r\n\r\nexport function setToArray<T>(set: Set<T>): T[] {\r\n    return [...set]\r\n}\r\n\r\nexport function prettify<T>(value: T): string{\r\n    if(value === null || value === undefined)\r\n        return \"\"\r\n    if(typeof value !== \"object\")\r\n        return String(value)\r\n    if(value instanceof Set || value instanceof Array)\r\n        return Array.from(value).join(\", \")\r\n    if(value instanceof Map)\r\n        return [...value.entries()].map(([key, value]) => `${value} (${key})`).join(\", \")\r\n    if (value instanceof Date)\r\n        return stringifyDate(value)\r\n\r\n    return JSON.stringify(value, null, 2)\r\n}\r\n\r\nexport function jsonify<T>(value: T|null):  any{\r\n    if(value === null || value === undefined)\r\n        return null\r\n    if(typeof value !== \"object\")\r\n        return value\r\n    if(value instanceof Set)\r\n        return setToArray(value)\r\n    if(value instanceof Map)\r\n        return mapToJson(value)\r\n\r\n    return value\r\n}\r\n\r\nexport function stringifyDate(date: Date): string {\r\n    const year = date.getFullYear(),\r\n        month = date.getMonth() + 1,\r\n        day = date.getDate()\r\n    return `${year}-${month < 10 ? '0' : ''}${month}-${day < 10 ? '0' : ''}${day}`\r\n}\r\n\r\nexport function transposeMatrix<T>(matrix: T[][]): T[][]{\r\n    return matrix[0].map((_, i) => matrix.map(row => row[i]))\r\n}\r\n\r\nexport const deepCopyOf = (some: any) => {\r\n    return some == null ? some : JSON.parse(JSON.stringify(some))\r\n}\r\n\r\n\r\n// FORM STATEMENT\r\nexport function parseFormStatementKeys(\r\n    keys: string[],\r\n    sectionsReceiver: any,\r\n    sectionFieldsReceiver: any\r\n){\r\n    keys.forEach((key: string) => {\r\n        const entry = key.split('_')\r\n\r\n        if(entry[1]) {\r\n            !sectionFieldsReceiver.has(entry[0]) && sectionFieldsReceiver.set(entry[0], new Set())\r\n            sectionFieldsReceiver.get(entry[0]).add(entry[1])\r\n        }\r\n        else\r\n            sectionsReceiver.add(entry[0])\r\n    })\r\n}\r\n\r\nexport function getOrSetMapValue<K, V>(map: Map<K, V>, key: K, value: V): V{\r\n    if(!map.has(key)){\r\n        map.set(key, value)\r\n    }\r\n    return map.get(key)\r\n}\r\n\r\nexport function swapArrayItems<T>(array: T[], firstItemIndex: number, secondItemIndex: number): T[]{\r\n    const checkIndex = (index: number) => index >= 0 && index < array.length\r\n    if(checkIndex(firstItemIndex) && checkIndex(secondItemIndex)){\r\n        const bufferedFirstItem = array[firstItemIndex]\r\n        array[firstItemIndex] = array[secondItemIndex]\r\n        array[secondItemIndex] = bufferedFirstItem\r\n    }\r\n    return array\r\n}","import {Module} from \"./Module\"\r\nimport {equal, deepCopyOf} from \"../../util/data\"\r\n\r\nexport abstract class InputModule<VALUE_TYPE> extends Module{\r\n\r\n    protected value: VALUE_TYPE\r\n\r\n    private readonly onChangeCallbacks: ((newValue: VALUE_TYPE) => void)[] = []\r\n\r\n    protected constructor(private changeRootValueFn?: (value: VALUE_TYPE) => void) {\r\n        super()\r\n    }\r\n    \r\n    onChange = (callback: (newValue: VALUE_TYPE) => void) => this.onChangeCallbacks.push(callback)\r\n\r\n    getValue(): VALUE_TYPE{\r\n        return this.value\r\n    }\r\n\r\n    setValue(value: VALUE_TYPE, changeRootValue = true){\r\n        if(!equal(value, this.value)){\r\n            this.value = deepCopyOf(value)\r\n            this.onChangeCallbacks.forEach(callback => callback(this.value))\r\n            if (changeRootValue)\r\n                this.changeRootValueFn?.(value)\r\n        }\r\n    }\r\n}","import {easepick} from \"@easepick/core\"\r\nimport {RangePlugin} from \"@easepick/range-plugin\"\r\nimport {AmpPlugin} from \"@easepick/amp-plugin\"\r\nimport {LockPlugin} from \"@easepick/lock-plugin\"\r\nimport {stringifyDate} from \"../util/data\"\r\nimport {serverLocations} from \"../properties\"\r\nimport {InputModule} from \"./abstract/InputModule\"\r\nimport {DateTime} from \"@easepick/datetime\"\r\n\r\nexport class EasepickModule extends InputModule<string[]>{\r\n\r\n    private easepick: easepick.Core\r\n\r\n    constructor(private rootElement: HTMLElement,\r\n                private config: {\r\n                    minYear?: number\r\n                    maxYear?: number\r\n                    range?:  boolean\r\n                    maxDays?: number\r\n                }) {\r\n\r\n        super(pickedDate => {\r\n            if(rootElement == null) return\r\n            Array.isArray(pickedDate)                                       // @ts-ignore Resolved by module import\r\n                ?  pickedDate[0] && rootElement.setStartDate(pickedDate[0]) // @ts-ignore Resolved by module import\r\n                || pickedDate[1] && rootElement.setEndDate(pickedDate[1])   // @ts-ignore Resolved by module import\r\n                : rootElement.setDate(pickedDate)\r\n        })\r\n\r\n        const initialDetail = {\r\n            date:  new DateTime(),\r\n            start: new DateTime(),\r\n            end:   new DateTime()\r\n        }\r\n\r\n        this.easepick = new easepick.create({\r\n            element: rootElement,\r\n            calendars: config.range ? 2 : 1,\r\n            grid: 2,\r\n            zIndex: 100,\r\n            plugins: [config.range ? RangePlugin : null, AmpPlugin, LockPlugin],\r\n            lang: 'ru',\r\n            date: initialDetail.date,\r\n            RangePlugin: config.range ? {\r\n                startDate: initialDetail.start,\r\n                endDate: initialDetail.end,\r\n                locale: {\r\n                    one: 'день',\r\n                    few: 'дня',\r\n                    many: 'дней'\r\n                },\r\n                delimiter: \" - \"\r\n            } : null,\r\n            AmpPlugin: {\r\n                darkMode: false,\r\n                dropdown: {\r\n                    minYear: Number(config.minYear ?? 2010),\r\n                    maxYear: Number(config.maxYear), months: true, years: true\r\n                }\r\n            },\r\n            LockPlugin: {\r\n                maxDays: Number(config.maxDays)\r\n            },\r\n            css: [\r\n                serverLocations.styles + \"third-party/easepick.css\"\r\n            ],\r\n            setup: (picker) => {\r\n                picker.on(\"select\", (e) => {\r\n                    this.setValue(this.easepickDetailToCalendarValue(e.detail), false)\r\n                    setTimeout(() => picker.hide(), 10)\r\n                })\r\n            }\r\n        })\r\n\r\n        this.value = this.easepickDetailToCalendarValue(initialDetail)\r\n    }\r\n\r\n    override destroy() {\r\n        this.easepick.destroy();\r\n    }\r\n\r\n    private easepickDetailToCalendarValue(detail: any): string[] {\r\n        return this.config.range\r\n            ? [stringifyDate(detail.start), stringifyDate(detail.end)]\r\n            : [stringifyDate(detail.date)]\r\n    }\r\n}","<script lang=\"ts\">\r\n\r\n    import Button from \"./Button.svelte\"\r\n    import {tick} from \"svelte\"\r\n    import {EasepickModule} from \"../../../third-party/EasepickModule\"\r\n\r\n    export let\r\n        value: string[],\r\n        range: number = null\r\n\r\n    let rootElement: HTMLInputElement,\r\n        module: EasepickModule\r\n\r\n    $: if(rootElement)\r\n        recreate()\r\n\r\n    $: if(value == null && module)\r\n        setValue(module.getValue())\r\n\r\n    function recreate(){\r\n        module?.destroy()\r\n        module = new EasepickModule(rootElement, {\r\n            range: range != null,\r\n            maxDays: range\r\n        })\r\n        module.onChange(setValue)\r\n\r\n        if(!value)\r\n            setValue(module.getValue())\r\n    }\r\n\r\n    async function setValue(newValue: string[]){\r\n        await tick()\r\n        value = newValue\r\n    }\r\n\r\n</script>\r\n\r\n<div class=\"datepicker\">\r\n    <Button image=\"calendar.svg\" on:click={() => rootElement.click()}/>\r\n    <input bind:this={rootElement}>\r\n</div>","<script lang=\"ts\">\r\n\r\n    export let\r\n        value = false,\r\n        title: string = \"\",\r\n        type: \"checkbox\" | \"switch\" = \"switch\"\r\n\r\n    $: if (value === undefined)\r\n        value = false\r\n\r\n</script>\r\n\r\n<label class={type}>\r\n    <input type=\"checkbox\" bind:checked={value}>\r\n    {title}\r\n    {#if type === \"switch\"}\r\n        <span class=\"slider\"></span>\r\n    {/if}\r\n</label>","import {resolveModule, resolveStyle} from \"../util/resolver\"\r\nimport {virtualSelectProperties} from \"../properties\"\r\nimport {equal} from \"../util/data\"\r\nimport {InputModule} from \"./abstract/InputModule\"\r\n\r\nexport type Option = {\r\n    label: string\r\n    value: string\r\n    alias: string\r\n    description: string\r\n}\r\n\r\nconst modulePromise = Promise.all([\r\n    resolveStyle(\"third-party/virtual-select\"),\r\n    resolveModule(\"third-party/virtual-select.min\")\r\n])\r\n\r\nexport class VirtualSelectModule extends InputModule<string[]>{\r\n\r\n    private options: Option[] = []\r\n    private readonly mountPromise: Promise<void>\r\n\r\n    constructor(private rootElement: HTMLElement,\r\n                readonly config: {\r\n                    multiple?:         boolean\r\n                    search?:           boolean\r\n                    showCodes?:        boolean\r\n                    placeholder?:      string\r\n                    disableSelectAll?: boolean\r\n                    maxValues?:        number\r\n                    default?:          string\r\n                }) {\r\n\r\n        super((newKeys: string[]) => {\r\n            rootElement\r\n                // @ts-ignore Resolved by module import\r\n                ?.setValue?.(newKeys)\r\n        })\r\n\r\n        this.value = []\r\n\r\n        this.mountPromise = new Promise(resolve => {\r\n            modulePromise.then(() => {\r\n                // @ts-ignore Resolved by module import\r\n                VirtualSelect.init({\r\n                    ...virtualSelectProperties,\r\n                    ele: rootElement,\r\n                    multiple: !!config.multiple,\r\n                    search: !!config.search,\r\n                    placeholder: config.placeholder ?? \"\",\r\n                    hasOptionDescription: !!config.showCodes,\r\n                    disableSelectAll: !!config.disableSelectAll,\r\n                    maxValues: config.maxValues,\r\n                    searchPlaceholderText: (config.multiple && !config.disableSelectAll)\r\n                        ? virtualSelectProperties.selectAllText\r\n                        : virtualSelectProperties.searchPlaceholderText,\r\n                    autofocus: false\r\n                })\r\n                rootElement.addEventListener(\"change\", event => {\r\n                    const newValue = event.currentTarget\r\n                        // @ts-ignore Resolved by module import\r\n                        .value\r\n                    super.setValue(newValue.length > 0 ? (typeof newValue === \"object\" ? newValue : [newValue]) : [], false)\r\n                })\r\n                resolve()\r\n            })\r\n        })\r\n    }\r\n\r\n    override async setValue(optionKeys: string[]){\r\n        await this.mountPromise\r\n        if(equal(this.value, optionKeys)) return\r\n        super.setValue(optionKeys, true)\r\n    }\r\n\r\n    setOptions(newOptions: Option[]) {\r\n        return this.mountPromise.then(() => {\r\n            if (!equal(this.options, newOptions)) {\r\n                if (newOptions && newOptions.length > 0) {\r\n                    this.rootElement// @ts-ignore Resolved by module import\r\n                        .enable()\r\n                    this.rootElement // @ts-ignore Resolved by module import\r\n                        .setOptions(newOptions)\r\n                } else {\r\n                    this.rootElement // @ts-ignore Resolved by module import\r\n                        .disable()\r\n                    this.rootElement // @ts-ignore Resolved by module import\r\n                        .reset()\r\n                    this.rootElement.blur()\r\n                }\r\n                this.options = newOptions\r\n            }\r\n        })\r\n    }\r\n\r\n    open(){\r\n        this.rootElement // @ts-ignore Resolved by module import\r\n            ?.open()\r\n    }\r\n    close(){\r\n        this.rootElement // @ts-ignore Resolved by module import\r\n            ?.close()\r\n    }\r\n    focus(){\r\n        this.rootElement // @ts-ignore Resolved by module import\r\n            ?.focus()\r\n    }\r\n    enable(){\r\n        this.rootElement // @ts-ignore Resolved by module import\r\n            ?.enable()\r\n    }\r\n    disable(){\r\n        this.rootElement // @ts-ignore Resolved by module import\r\n            ?.disable()\r\n    }\r\n    override destroy() {\r\n        try{this.rootElement // @ts-ignore Resolved by module import\r\n            ?.destroy()}\r\n        catch{}\r\n    }\r\n}","<script lang=\"ts\">\r\n\r\n    import {VirtualSelectModule} from \"../../../third-party/VirtualSelectModule\"\r\n\r\n    type Options = { [key: string]: string}\r\n\r\n    export let\r\n        value: Options,\r\n        options: Options,\r\n        multiple        = false,\r\n        search          = false,\r\n        showCodes       = false,\r\n        placeholder     = '',\r\n        pickAllCheckbox = false,\r\n        maxValues       = 0\r\n\r\n    let rootElement: HTMLDivElement,\r\n        module: VirtualSelectModule\r\n\r\n    $: if (options == null)\r\n        options = {}\r\n\r\n    $: if (value == null)\r\n        value = {}\r\n\r\n    $: if(rootElement)\r\n        recreate()\r\n\r\n    // React to options changes\r\n    $: if(options && module) {\r\n        module.setOptions(Object.entries(options)\r\n            .map(([key, value]) => {return {\r\n                value: key,\r\n                label: value,\r\n                alias: key,\r\n                description: key\r\n            }})\r\n        )\r\n    }\r\n\r\n    // Handle value changes\r\n    $: if(options && value !== undefined)\r\n        module?.setValue(Object.keys(value))\r\n\r\n    function recreate(){\r\n        module?.destroy()\r\n        module = new VirtualSelectModule(rootElement, {\r\n            multiple,\r\n            search,\r\n            showCodes,\r\n            placeholder,\r\n            disableSelectAll: !pickAllCheckbox,\r\n            maxValues\r\n        })\r\n        module.onChange(newKeys => {\r\n            value = {}\r\n            newKeys = newKeys ?? []\r\n            newKeys.forEach(key => value[key] = options[key])\r\n        })\r\n    }\r\n\r\n</script>\r\n\r\n<div class=\"select\" bind:this={rootElement}>\r\n</div>\r\n\r\n<!--{JSON.stringify(Object.entries(options.entries()))}-->","import {toJpeg} from \"dom-to-image\"\r\n\r\n// Used to create inner html and return them as elements\r\nconst factoryElement = document.createElement(\"factory\")\r\ndocument.body.appendChild(factoryElement)\r\nfactoryElement.hidden = true\r\n\r\nexport function create<T extends HTMLElement>(html: string): T{\r\n    factoryElement.innerHTML = html\r\n    return factoryElement.firstElementChild as T\r\n}\r\n\r\n// Removes all child elements\r\nexport function emptyElement(element: Element, withText: boolean = true){\r\n    const text = element.textContent\r\n    while(element.firstElementChild !== null)\r\n        element.firstElementChild.remove()\r\n\r\n    if(!withText) element.textContent = text\r\n}\r\n\r\nexport function swapElements(element1: HTMLElement, element2: HTMLElement) {\r\n    const temp = document.createElement('div')\r\n    element1.replaceWith(temp)\r\n    element2.replaceWith(element1)\r\n    temp.replaceWith(element2)\r\n}\r\n\r\nexport function exportAsJpeg(element: HTMLElement, jpegName: string = \"element\"){\r\n    toJpeg(element)\r\n        .then((dataUrl) => {\r\n            const link = document.createElement(\"a\")\r\n            link.download = jpegName+\".jpeg\"\r\n            link.href = dataUrl\r\n            link.click()\r\n            link.remove()\r\n        })\r\n}\r\n\r\nexport function scrollIntoElement(element: HTMLElement) {\r\n    element.scrollIntoView({behavior: \"smooth\", block: \"start\"})\r\n}\r\n\r\nexport function toggleFullscreen(element: HTMLElement){\r\n    if(!!getFullscreenElement())\r\n        document.exitFullscreen()\r\n    else\r\n        element.requestFullscreen()\r\n}\r\n\r\nexport function getFullscreenElement(): Element{\r\n    return document.querySelector(\":fullscreen\")\r\n}\r\n\r\n// Each enable of cursor loading adds 1 item into this array, each disabling removes also 1 item.\r\n// The only purpose is to prevent disabling when not all loaded\r\nlet cursorLoadersCount = 0\r\n\r\nexport function addCursorLoader() {\r\n    document.documentElement.style.cursor = 'wait'\r\n    cursorLoadersCount++\r\n}\r\n\r\nexport function removeCursorLoader() {\r\n    cursorLoadersCount--\r\n    if(cursorLoadersCount <= 0)\r\n        document.documentElement.style.cursor = 'default'\r\n}","import {addCursorLoader, removeCursorLoader} from \"../../util/dom\";\r\nimport {popupError} from \"../../util/alert\";\r\nimport {serverErrors, serverLocations} from \"../../properties\";\r\n\r\n\r\nexport type Method = \"GET\" | \"POST\" | \"PUT\" | \"PATCH\" | \"DELETE\"\r\nexport type ResourceType = \"json\" | \"text\" | \"blob\"\r\n\r\nexport abstract class Http {\r\n\r\n    protected static get     = (url: string,\r\n                                headers?: object,\r\n                                type?: ResourceType) => Http.send(url,\"GET\", headers, undefined, type)\r\n\r\n    protected static put     = (url: string,\r\n                         headers?: object,\r\n                         payload?: object,\r\n                                type?: ResourceType) => Http.send(url,\"PUT\", headers, payload,        type)\r\n\r\n    protected static post    = (url: string,\r\n                         headers?: object,\r\n                         payload?: object,\r\n                                type?: ResourceType) => Http.send(url,\"POST\", headers, payload,        type)\r\n\r\n    protected static delete  = (url: string,\r\n                         headers?: object,\r\n                         payload?: object,\r\n                                type?: ResourceType) => Http.send(url,\"DELETE\", headers, payload,        type)\r\n\r\n    protected static async send(url: string,\r\n                       method: Method,\r\n                       headers?: object,\r\n                       payload?: object,\r\n                                type: ResourceType = \"json\")\r\n    {\r\n        addCursorLoader()\r\n        let response = await fetch(\r\n            url, {\r\n                method,\r\n                headers: prepareHeaders(headers ?? {}),\r\n                body: payload ? JSON.stringify(payload) : undefined\r\n            })\r\n            .finally(() => removeCursorLoader())\r\n        if(response.ok) {\r\n            return await response[type]()\r\n        }\r\n        else {\r\n            const error = new Error(await response.text())\r\n            error.name = `${response.status}: ${response.statusText}`\r\n            await popupError(error, serverErrors[Object.keys(serverLocations).find(key => serverLocations[key] === url) ?? -1])\r\n            throw error\r\n        }\r\n    }\r\n}\r\n\r\nasync function getContentLength(response: Response): Promise<number> {\r\n    const responseClone = response.clone();\r\n    const reader = responseClone.body.getReader();\r\n    let contentLength = 0;\r\n    while (true) {\r\n        const { done, value } = await reader.read();\r\n        if (done) break;\r\n        contentLength += value.length;\r\n    }\r\n    return contentLength\r\n}\r\n\r\nfunction prepareHeaders(headers: object) {\r\n    Object.keys(headers)\r\n        .forEach(key => headers[key] = encodeURIComponent(headers[key]))\r\n\r\n    return {\r\n        \"Content-Type\"  : \"application/json;charset=UTF-8\",\r\n        // \"Code\"          :  appConfig.code ?? \"\",\r\n        ...headers\r\n    }\r\n}","import {Http, Method, ResourceType} from \"./Http\"\r\n\r\nexport class SimpleHttp extends Http {\r\n\r\n    static withHeaders = (headers?: object) => { return {\r\n        andBody: (payload?: object) => { return {\r\n            post(url: string) {return SimpleHttp.withAll(url, \"POST\", headers, payload)},\r\n            put(url: string)  {return SimpleHttp.withAll(url, \"PUT\",  headers, payload)},\r\n            patch(url: string) {return SimpleHttp.withAll(url, \"PATCH\", headers, payload)},\r\n            delete(url: string) {return SimpleHttp.withAll(url, \"DELETE\", headers, payload)}\r\n        }},\r\n        get(url: string) {return SimpleHttp.withAll(url, \"GET\", headers, undefined)}\r\n    }}\r\n\r\n    static withBody = (payload?: object) => SimpleHttp.withHeaders().andBody(payload)\r\n\r\n    static justGet = (url: string) => SimpleHttp.withHeaders().get(url)\r\n\r\n    private static withAll(url: string,\r\n                           method: Method,\r\n                           headers: object,\r\n                           payload: object) {\r\n        const sendFor = (type: ResourceType) => Http.send(url, method, headers, payload, type)\r\n        return {\r\n            text(): Promise<string> {return sendFor(\"text\")},\r\n            json<T>(): Promise<T> {return sendFor(\"json\")},\r\n            blob(): Promise<Blob>   {return sendFor(\"blob\")}\r\n        }\r\n    }\r\n\r\n    protected constructor() {\r\n        super();\r\n    }\r\n}","import {serverLocations} from \"../properties\"\r\nimport {SimpleHttp} from \"./http/SimpleHttp\"\r\n\r\nexport async function getOptionsFromSB(listName: string,\r\n                                       listKeyName: string,\r\n                                       listValueName: string,\r\n                                       params: { [key: string]: string | number | boolean } = {}): Promise<{ [key: string]: string }> {\r\n    const options: { [key: string]: string } = {}\r\n    const sbResponse = await SimpleHttp\r\n        .withBody(JSON.parse(`{\"${listName}\":[${JSON.stringify(params)}]}`))\r\n        .post(serverLocations.serviceBank)\r\n        .json<object[]>()\r\n\r\n    sbResponse[listName].forEach(item => {\r\n        const key = item[listKeyName] as string\r\n        const value = item[listValueName] as string\r\n        if (key != null)\r\n            options[key] = value\r\n    })\r\n    return options\r\n}","<script lang=\"ts\">\r\n    import Form from \"../common/form/Form.svelte\"\r\n    import Section from \"../common/form/Section.svelte\";\r\n    import Field from \"../common/form/Field.svelte\";\r\n    import Calendar from \"../common/input/Calendar.svelte\";\r\n    import Switch from \"../common/input/Switch.svelte\";\r\n    import Select from \"../common/input/Select.svelte\";\r\n    import {onMount} from \"svelte\";\r\n    import {getOptionsFromSB} from \"../../api/serviceBank\";\r\n    import {Values} from \"./valueTypes\";\r\n\r\n    export let\r\n        dativeTitle: string,\r\n        values: Values = {},\r\n        submitIsTouched: boolean,\r\n        isWrong: boolean\r\n\r\n    let carrierOptions: {[key: string]: string} = {},\r\n        roadOptions:    {[key: string]: string} = {}\r\n\r\n    $: carriersIsNotPicked = values.carriers && Object.entries(values.carriers).length === 0\r\n    $: roadsIsNotPicked    = values.roads    && Object.entries(values.roads).length === 0\r\n\r\n    $: isWrong = !!(carriersIsNotPicked || roadsIsNotPicked);\r\n\r\n    onMount(async () => {\r\n        carrierOptions  = await getOptionsFromSB(\"perList\", \"skp\", \"nazvp\", {\r\n            data: \"2025-01-01\",\r\n            gos: 20,\r\n            prpp: 1,\r\n            skp: -1\r\n        })\r\n        roadOptions     = await getOptionsFromSB(\"dorList\", \"d_nom3\", \"d_name\", {\r\n            data: \"2025-01-01\",\r\n            dor:'*',\r\n            gos: 20\r\n        })\r\n    })\r\n\r\n</script>\r\n\r\n<Form {values}\r\n      {isWrong}\r\n      bind:submitIsTouched\r\n      on:submit>\r\n    <Section>\r\n        <Field title=\"Период {dativeTitle}\">\r\n            <Calendar range={31}\r\n                      bind:value={values.period}/>\r\n        </Field>\r\n    </Section>\r\n    <Section size={1}>\r\n        <Field>\r\n            <Switch title=\"Детализировать по дате {dativeTitle}\"\r\n                    bind:value={values.periodDetailing}/>\r\n        </Field>\r\n\r\n    </Section>\r\n    <Section>\r\n        <Field title=\"Перевозчики\"\r\n               isWrong={submitIsTouched && carriersIsNotPicked}>\r\n            <Select search\r\n                    options={carrierOptions}\r\n                    bind:value={values.carriers}/>\r\n        </Field>\r\n        <Field title=\"Дорога {dativeTitle}\"\r\n               isWrong={submitIsTouched && roadsIsNotPicked}>\r\n            <Select search\r\n                    options={roadOptions}\r\n                    bind:value={values.roads}/>\r\n        </Field>\r\n\r\n        <slot name=\"main section\"/>\r\n    </Section>\r\n    <Section size={1}>\r\n        <Field>\r\n            <Switch title=\"Дополнительные параметры\"\r\n                    bind:value={values.additional}/>\r\n        </Field>\r\n\r\n    </Section>\r\n\r\n    <slot/>\r\n</Form>","<script lang=\"ts\">\r\n    import Section from \"../common/form/Section.svelte\";\r\n    import CommonForm from \"./CommonForm.svelte\";\r\n    import {SalesValues} from \"./valueTypes\";\r\n    import {onMount} from \"svelte\";\r\n    import {getOptionsFromSB} from \"../../api/serviceBank\";\r\n    import Field from \"../common/form/Field.svelte\";\r\n    import Select from \"../common/input/Select.svelte\";\r\n\r\n    let values: SalesValues,\r\n        submitIsTouched: boolean,\r\n        isWrong: boolean\r\n\r\n    let regionOptions: {[key: string]: string} = {},\r\n        paymentTypeOptions = { 2: \"Наличный\", 3: \"Банковские карты\", 5: \"Безналичный (ПЮ)\", 6: \"Электронный кошелек\", 1: \"Льготный\", 4: \"Безналичный (Интернет)\" },\r\n        travelTicketTypeOptions = { 1: \"Разовый\", 2: \"Абонементный на количество поездок\", 3: \"Абонементный билет «ежедневно» месяцы\", 4: \"Абонементный билет «ежедневно» дни\", 5: \"Абонементный билет «рабочего дня»\", 6: \"Абонементный билет «выходного дня»\", 7: \"Абонементный билет «на определенные даты (четные/нечетные)»\" },\r\n        shippingTicketTypeOptions = { 1: \"Ручная кладь по весу\", 2: \"Ручная кладь – телевизор\", 3: \"Ручная кладь – велосипед\", 4: \"Ручная кладь – живность\", 5: \"Сбор за оформление в поезде\" },\r\n        operationTypeOptions = { true: \"Оформление\", false: \"Возврат\" }\r\n\r\n    onMount(async () => {\r\n        regionOptions = {\r\n            \"*\": \"Все субъекты\",\r\n            ...(await getOptionsFromSB(\"sfList\", \"sf_kod2\", \"sf_name\", {\r\n                data: \"2025-01-01\"\r\n            }))\r\n        }\r\n    })\r\n\r\n</script>\r\n\r\n<CommonForm\r\n        dativeTitle=\"продаж\"\r\n        bind:values\r\n        bind:isWrong\r\n        bind:submitIsTouched\r\n        on:submit>\r\n    <Field title=\"Субъект продажи\"\r\n           slot=\"main section\">\r\n        <Select search\r\n                options={regionOptions}\r\n                bind:value={values.regions}/>\r\n    </Field>\r\n    {#if values.additional}\r\n        <Section>\r\n            <Field title=\"Виды расчёта\">\r\n                <Select pickAllCheckbox\r\n                        options={paymentTypeOptions}\r\n                        bind:value={values.paymentTypes}/>\r\n            </Field>\r\n            <Field title=\"Виды проездного документа\">\r\n                <Select pickAllCheckbox\r\n                        options={travelTicketTypeOptions}\r\n                        bind:value={values.travelTicketTypes}/>\r\n            </Field>\r\n            <Field title=\"Виды перевозочного документа\">\r\n                <Select pickAllCheckbox\r\n                        options={shippingTicketTypeOptions}\r\n                        bind:value={values.shippingTicketTypes}/>\r\n            </Field>\r\n            <Field title=\"Виды операции\">\r\n                <Select pickAllCheckbox\r\n                        options={operationTypeOptions}\r\n                        bind:value={values.operationTypes}/>\r\n            </Field>\r\n        </Section>\r\n    {/if}\r\n</CommonForm>","<script lang=\"ts\">\r\n    import Section from \"../common/form/Section.svelte\"\r\n    import CommonForm from \"./CommonForm.svelte\"\r\n    import {DepsValues} from \"./valueTypes\"\r\n    import Field from \"../common/form/Field.svelte\"\r\n    import Select from \"../common/input/Select.svelte\"\r\n\r\n    let values: DepsValues,\r\n        submitIsTouched: boolean,\r\n        isWrong: boolean\r\n\r\n    let trainCategoryOptions = { 7: \"Скорый пригородный поезд без предоставления мест\", \"О\": \"Пригородный пассажирский поезд\", \"С\": \"Скорый пригородный поезд типа Спутник\", \"А\": \"Рельсовый автобус 6000-ой нумерации\", \"Б\": \"Рельсовый автобус 7000-ой нумерации\", \"Г\": \"Городские линии\", \"Л\": \"Скоростной пригородный поезд\" }\r\n\r\n</script>\r\n\r\n<CommonForm\r\n        dativeTitle=\"отправления\"\r\n        bind:values\r\n        bind:isWrong\r\n        bind:submitIsTouched\r\n        on:submit>\r\n    {#if values.additional}\r\n        <Section>\r\n            <Field title=\"Категория поезда\">\r\n                <Select pickAllCheckbox\r\n                        options={trainCategoryOptions}\r\n                        bind:value={values.trainCategories}/>\r\n            </Field>\r\n        </Section>\r\n    {/if}\r\n</CommonForm>","import {TableModel} from \"./TableModel\";\r\n\r\nexport class ExportableReport {\r\n\r\n    tables: TableModel[] = []\r\n\r\n    constructor(public readonly title: string) {\r\n    }\r\n\r\n    addTable(table: TableModel) {\r\n        this.tables.push(table)\r\n    }\r\n\r\n    toJson(): any {\r\n        return {\r\n            title:  this.title,\r\n            tables: this.tables.map(table => table.toJson())\r\n        }\r\n    }\r\n}","\r\nconst NULL_CELL_CLASSES = ['collapsed'];\r\nconst IGNORED_CELL_CLASSES = ['checkbox'];\r\nconst IGNORED_ROW_CLASSES = ['operations', 'tool-bar'];\r\n\r\n// Типы данных\r\nexport type ColumnType = \"text\" | \"number\" | \"boolean\";\r\nexport type CellData = string | number | boolean;\r\n\r\n// Основная модель таблицы\r\nexport class TableModel {\r\n    head: RowModel[] = [];\r\n    body: RowModel[] = [];\r\n\r\n    constructor(public readonly  title: string,\r\n                private readonly htmlTable: HTMLTableElement) {\r\n        this.parseTable();\r\n    }\r\n\r\n    toJson(): any {\r\n        return {\r\n            title: this.title,\r\n            head:  this.head.map(row => row.toJson()),\r\n            body:  this.body.map(row => row.toJson())\r\n        };\r\n    }\r\n\r\n    private parseTable() {\r\n        // Обработка заголовка (thead)\r\n        if (this.htmlTable.tHead) {\r\n            for (let i = 0; i < this.htmlTable.tHead.rows.length; i++) {\r\n                const row = this.htmlTable.tHead.rows[i];\r\n                if (!this.isRowIgnored(row)) {\r\n                    this.head.push(new RowModel(row));\r\n                }\r\n            }\r\n        }\r\n\r\n        // Обработка тела (tbody)\r\n        const tBodies = this.htmlTable.tBodies;\r\n        for (let i = 0; i < tBodies.length; i++) {\r\n            for (let j = 0; j < tBodies[i].rows.length; j++) {\r\n                const row = tBodies[i].rows[j];\r\n                if (!this.isRowIgnored(row)) {\r\n                    this.body.push(new RowModel(row));\r\n                }\r\n            }\r\n        }\r\n\r\n        // Обработка подвала (tfoot)\r\n        if (this.htmlTable.tFoot) {\r\n            for (let i = 0; i < this.htmlTable.tFoot.rows.length; i++) {\r\n                const row = this.htmlTable.tFoot.rows[i];\r\n                if (!this.isRowIgnored(row)) {\r\n                    this.body.push(new RowModel(row));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private isRowIgnored(row: HTMLTableRowElement): boolean {\r\n        return IGNORED_ROW_CLASSES.some(cls => row.classList.contains(cls));\r\n    }\r\n}\r\n\r\n// Модель строки\r\nexport class RowModel {\r\n    cells: CellModel[] = [];\r\n\r\n    constructor(private readonly htmlTableRow: HTMLTableRowElement) {\r\n        this.parseRow();\r\n    }\r\n\r\n    toJson(): any {\r\n        return {\r\n            cells: this.cells.map(cell => cell ? cell.toJson() : null)\r\n        };\r\n    }\r\n\r\n    private parseRow() {\r\n        const cells = this.htmlTableRow.cells;\r\n        for (let i = 0; i < cells.length; i++) {\r\n            const cell = cells[i];\r\n\r\n            // Пропуск скрытых и игнорируемых ячеек\r\n            if (cell.style.display === \"none\" || IGNORED_CELL_CLASSES.some(cls => cell.classList.contains(cls)))\r\n                continue;\r\n\r\n            // Обработка null-ячеек\r\n            if (NULL_CELL_CLASSES.some(cls => cell.classList.contains(cls))) {\r\n                this.cells.push(null);\r\n            } else {\r\n                this.cells.push(new CellModel(cell));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// Модель ячейки\r\nexport class CellModel {\r\n    value: CellData;\r\n    colspan: number;\r\n    rowspan: number;\r\n    total: boolean;\r\n    type: ColumnType;\r\n\r\n    constructor(htmlTableCell: HTMLTableCellElement) {\r\n        // Определение типа данных\r\n        this.type = \"text\";\r\n        if      (htmlTableCell.classList.contains(\"number\"))  this.type = \"number\";\r\n        else if (htmlTableCell.classList.contains(\"boolean\")) this.type = \"boolean\";\r\n\r\n        // Извлечение значения\r\n        this.value = this.convertValue(\r\n            htmlTableCell.hasAttribute(\"value\")\r\n                ? htmlTableCell.getAttribute(\"value\")\r\n                : getDirectText(htmlTableCell),\r\n            this.type);\r\n\r\n        // Атрибуты объединения ячеек\r\n        this.colspan = htmlTableCell.colSpan;\r\n        this.rowspan = htmlTableCell.rowSpan;\r\n\r\n        // Проверка на total-ячейку\r\n        this.total = htmlTableCell.classList.contains(\"total\");\r\n    }\r\n\r\n    toJson(): any {\r\n        console.log(this.value);\r\n        return {\r\n            value:   this.value,\r\n            type:    this.type,\r\n            colspan: this.colspan,\r\n            rowspan: this.rowspan,\r\n            total:   this.total\r\n        };\r\n    }\r\n\r\n    private convertValue(text: string, type: ColumnType): CellData {\r\n        switch (type) {\r\n            case \"number\":\r\n                const num = parseFloat(text);\r\n                return isNaN(num) ? 0 : num;\r\n            case \"boolean\":\r\n                const normalized = text.trim().toLowerCase();\r\n                return normalized === \"true\" || normalized === \"1\";\r\n            default:\r\n                return text;\r\n        }\r\n    }\r\n}\r\n\r\n// Вспомогательная функция для извлечения текста\r\nfunction getDirectText(element: HTMLElement): string {\r\n    let result = '';\r\n    for (let i = 0; i < element.childNodes.length; i++) {\r\n        const node = element.childNodes[i];\r\n        if (node.nodeType === Node.TEXT_NODE) {\r\n            result += node.textContent;\r\n        }\r\n    }\r\n    return result;\r\n}","import {ExportableReport} from \"../model/export/ExportableReport\"\r\nimport {SimpleHttp} from \"./http/SimpleHttp\"\r\nimport {serverLocations} from \"../properties\"\r\n\r\nexport function getReportData(reportId: string, formValues: { [fieldId: string]: any }) {\r\n    return SimpleHttp\r\n        .withHeaders({\"Report-Id\": reportId})\r\n        .andBody(formValues)\r\n        .post(serverLocations.report)\r\n        .json<(string | number | boolean)[][]>()\r\n}\r\n\r\nexport async function downloadReport(report: ExportableReport) {\r\n    download(await SimpleHttp\r\n        .withHeaders()\r\n        .andBody(report)\r\n        .post(serverLocations.export)\r\n        .blob(), report.title)\r\n}\r\n\r\nfunction download(blob: Blob, name: string) {\r\n    const url  = URL.createObjectURL(blob);\r\n    const a    = document.createElement('a');\r\n    a.href     = url;\r\n    a.download = name;\r\n    a.click();\r\n    a.remove();\r\n    URL.revokeObjectURL(url);\r\n}","<script lang=\"ts\">\r\n\r\n    import Button from \"../input/Button.svelte\"\r\n    import {scrollIntoElement} from \"../../../util/dom\";\r\n\r\n</script>\r\n\r\n<Button hint=\"Вернуться наверх\"\r\n        image=\"to_top.svg\"\r\n        on:click={() => scrollIntoElement(document.body)}/>","<script lang=\"ts\">\r\n\r\n    import {exportAsJpeg, getFullscreenElement, toggleFullscreen} from \"../../../util/dom\"\r\n    import {popupRadioAction} from \"../../../util/alert\"\r\n    import {ExportableReport} from \"../../../model/export/ExportableReport\"\r\n    import {TableModel} from \"../../../model/export/TableModel\"\r\n    import {downloadReport} from \"../../../api/report\"\r\n    import ToTopButton from \"../navigation/ToTopButton.svelte\"\r\n    import Button from \"../input/Button.svelte\"\r\n    import Loading from \"../misc/Loading.svelte\";\r\n\r\n    export let\r\n        reportRootElement: HTMLDivElement,\r\n        title: string,\r\n        modal = false,\r\n        allowTablesExport = false,\r\n        allowChartsExport = false,\r\n        isCollapsed  = false,\r\n        isFullScreen = false,\r\n        isLoaded     = null\r\n\r\n    window.addEventListener(\"fullscreenchange\", () => {\r\n        isFullScreen = getFullscreenElement() === reportRootElement\r\n    })\r\n\r\n    function tryExport() {\r\n        type option = \"tables\" | \"charts\"\r\n        const radios: { [key in option]?: string } = {}\r\n        if(allowTablesExport)\r\n            radios.tables = \"Таблицы\"\r\n        if(allowChartsExport)\r\n            radios.charts = \"Графики\"\r\n\r\n        if(Object.keys(radios).length > 0)\r\n            popupRadioAction(\"Экспорт отчёта\", \"Выберите вариант\", radios, \"Получить\", (value: option) => {\r\n                switch (value) {\r\n                    case \"tables\": exportTables(); break\r\n                    case \"charts\": exportCharts()\r\n                }\r\n            })\r\n    }\r\n\r\n    function exportTables() {\r\n        reportRootElement?.querySelectorAll(\".body .content table\")?.forEach((tableBlock: HTMLTableElement, i) => {\r\n            const report = new ExportableReport(title)\r\n            report.addTable(new TableModel(\"Таблица\", tableBlock))\r\n            downloadReport(report.toJson())\r\n        })\r\n    }\r\n    function exportCharts() {\r\n        reportRootElement?.querySelectorAll(\".body .content .charts\")?.forEach((chartsBlock, i) => {\r\n            exportAsJpeg(chartsBlock.closest(\".content\"), \"Графики\")\r\n        })\r\n    }\r\n\r\n</script>\r\n\r\n<div class=\"header\">\r\n    <h2>\r\n        {title}\r\n    </h2>\r\n    {#if isLoaded === false}\r\n        <Loading/>\r\n    {:else if isLoaded === true}\r\n        {#if !modal}\r\n            <ToTopButton/>\r\n        {/if}\r\n        <!--{#if report.hasCharts && report.hasTables}-->\r\n        <!--    <Button image=\"graph.svg\"-->\r\n        <!--            disabled={collapsed}-->\r\n        <!--            hint=\"Графическое представление\"-->\r\n        <!--            on:click={() => showCharts = !showCharts}/>-->\r\n        <!--{/if}-->\r\n        <Button image=\"download.svg\"\r\n                hint=\"Экспортировать\"\r\n                on:click={tryExport}/>\r\n        <!--{#if !modal}-->\r\n        <!--    <Button image=\"collapse.svg\"-->\r\n        <!--            hint={isCollapsed ? \"Развернуть\" : \"Свернуть\"}-->\r\n        <!--            on:click={() => isCollapsed = !isCollapsed}/>-->\r\n        <!--{/if}-->\r\n        <Button image={isFullScreen ? \"restore.svg\" : \"expand.svg\"}\r\n                hint={isFullScreen ? \"Нормальный вид\" : \"На весь экран\"}\r\n                on:click={() => toggleFullscreen(reportRootElement)}/>\r\n        {#if modal}\r\n            <Button image=\"close.svg\"\r\n                    hint=\"Закрыть\"\r\n                    on:click={() => window.dispatchEvent(new KeyboardEvent(\"keydown\",{ key: \"Escape\" }))}/>\r\n        {/if}\r\n    {/if}\r\n</div>","<script lang=\"ts\">\r\n\r\n    import ReportHeader from \"./ReportHeader.svelte\"\r\n    import {resolveStyle} from \"../../../util/resolver\"\r\n    import Loading from \"../misc/Loading.svelte\"\r\n    import {onMount} from \"svelte\";\r\n\r\n    export let\r\n        title    = \"Отчёт\",\r\n        modal    = false,\r\n        isLoaded = null\r\n\r\n    let reportRootElement: HTMLDivElement,\r\n        isCollapsed  = false,\r\n        isFullScreen = false\r\n\r\n</script>\r\n\r\n{#await resolveStyle(\"report\")}\r\n    <Loading/>\r\n{:then _}\r\n\r\n    <div class=\"report\"\r\n         bind:this={reportRootElement}>\r\n\r\n        <ReportHeader {title}\r\n                      {reportRootElement}\r\n                      {modal}\r\n                      {isLoaded}\r\n                      bind:isCollapsed\r\n                      bind:isFullScreen/>\r\n\r\n        <div class=\"body\">\r\n            <slot/>\r\n        </div>\r\n    </div>\r\n\r\n{/await}\r\n<!--{JSON.stringify(formValue)}-->\r\n","<script lang=\"ts\">\r\n\r\n    import { fade } from 'svelte/transition'\r\n    import {createEventDispatcher, onDestroy} from \"svelte\"\r\n\r\n    const dispatch = createEventDispatcher()\r\n\r\n    export let\r\n        show: boolean = false,\r\n        fullSize: boolean = false\r\n\r\n    let rootElement: HTMLDivElement\r\n\r\n    $: if(rootElement) document.body.appendChild(rootElement)\r\n\r\n    // Disable scroll when modal is opened\r\n    $: document.body.style.overflow = show === true ? \"hidden\" : \"\"\r\n\r\n    $: if (show === false)\r\n        dispatch(\"close\")\r\n\r\n    $: if(rootElement) {\r\n        window.addEventListener(\"keydown\", onKeydown)\r\n        rootElement.addEventListener(\"click\", onBackdropClick)\r\n    } else {\r\n        window.removeEventListener(\"keydown\", onKeydown)\r\n    }\r\n\r\n    // Close on escape key\r\n    function onKeydown(event: KeyboardEvent) {\r\n        // if (event.key === \"Escape\") {\r\n        //     show = false\r\n        // }\r\n    }\r\n    // Close on backdrop click\r\n    function onBackdropClick(event: MouseEvent) {\r\n        if (event.target === rootElement) {\r\n            show = false\r\n        }\r\n    }\r\n\r\n    onDestroy(() => {\r\n        window.removeEventListener(\"keydown\", onKeydown)\r\n        document.body.style.overflow = \"\"\r\n    })\r\n\r\n</script>\r\n{#if show === true}\r\n    <div bind:this={rootElement}\r\n         class=\"modal-backdrop\"\r\n         role=\"button\"\r\n         tabindex=\"-1\"\r\n         transition:fade={{duration: 50}}>\r\n\r\n        <div class=\"modal\"\r\n             class:full-size={fullSize}\r\n             role=\"none\">\r\n            <slot/>\r\n        </div>\r\n    </div>\r\n{/if}","<script lang=\"ts\">\r\n\r\n    import Modal from \"../../misc/Modal.svelte\";\r\n\r\n    export let\r\n        title = \"\",\r\n        modal = false\r\n\r\n    let show: boolean\r\n\r\n</script>\r\n\r\n<div class=\"content\">\r\n    {#if modal}\r\n        <a href=\"\"\r\n           on:click={(ev) => {ev.preventDefault() ; show = true}}>\r\n            {title ?? \"Показать\"}\r\n        </a>\r\n        <Modal bind:show>\r\n            <slot/>\r\n        </Modal>\r\n    {:else}\r\n        {#if title}\r\n            <div class=\"header\">\r\n                <h3>{title}</h3>\r\n            </div>\r\n        {/if}\r\n        <slot/>\r\n    {/if}\r\n</div>\r\n","<script lang=\"ts\">\r\n\r\n    import {ColumnType} from \"../types\"\r\n\r\n    export let\r\n        matrixData: (string | number | boolean | null)[][],\r\n        columnTypes: ColumnType[]\r\n\r\n</script>\r\n\r\n<tbody>\r\n\r\n    {#each matrixData as row}\r\n        <tr>\r\n            {#each row as cell, i}\r\n                <td class={columnTypes[i]}>{cell != null ? cell : \"\"}</td>\r\n            {/each}\r\n        </tr>\r\n    {/each}\r\n\r\n</tbody>","<script lang=\"ts\">\r\n\r\n    export let columnHeaders: string[]\r\n\r\n</script>\r\n\r\n<tr>\r\n    {#each columnHeaders as header}\r\n        <th>{header}</th>\r\n    {/each}\r\n</tr>\r\n","<script lang=\"ts\">\r\n\r\n    import ColumnHeaders from \"./ColumnHeaders.svelte\"\r\n    import ColumnOperations from \"./ColumnOperations.svelte\"\r\n    import {ColumnType} from \"../types\";\r\n\r\n    export let\r\n        columnHeaders: string[],\r\n        columnTypes: ColumnType[],\r\n        // Provides\r\n        columnOperations: {\r\n            filter: string\r\n            sort: \"asc\" | \"desc\"\r\n        }[]\r\n\r\n</script>\r\n\r\n<thead>\r\n    <ColumnHeaders    {columnHeaders}/>\r\n<!--    <ColumnOperations {columnTypes}-->\r\n<!--                      bind:columnOperations/>-->\r\n</thead>","<script lang=\"ts\">\r\n\r\n    export let\r\n        matrixData: (string | number | boolean)[][],\r\n        columnTypes: (typeof matrixData[0][0])[]\r\n\r\n    let totalRowData: typeof matrixData[0]\r\n\r\n    $: {\r\n        totalRowData = columnTypes.map(type => type === \"number\" ? 0 : null)\r\n        matrixData.forEach(rowData => {\r\n            rowData.forEach((cell, cellI) => {\r\n                if(totalRowData[cellI] != null)\r\n                    (totalRowData[cellI] as number) += isNaN(cell as number) ? 0 : Number(cell)\r\n            })\r\n        })\r\n    }\r\n\r\n</script>\r\n\r\n<tfoot>\r\n{#if totalRowData?.length > 0}\r\n    <tr class=\"total\">\r\n        {#each totalRowData as totalCell, cellI}\r\n            <td class={\"total \" + columnTypes[cellI]}>\r\n                {totalCell != null ? totalCell : \"\"}\r\n            </td>\r\n        {/each}\r\n    </tr>\r\n{/if}\r\n</tfoot>","<script lang=\"ts\">\r\n\r\n    import Body from \"./body/Body.svelte\"\r\n    import {createEventDispatcher} from \"svelte\"\r\n    import Head from \"./head/Head.svelte\"\r\n    import Foot from \"./foot/Foot.svelte\"\r\n    import {ColumnType} from \"./types\";\r\n    import Loading from \"../../../misc/Loading.svelte\";\r\n    import {resolveStyle} from \"../../../../../util/resolver\";\r\n\r\n    const dispatch = createEventDispatcher()\r\n\r\n    export let\r\n        matrixData: (string | number | boolean | null)[][],\r\n        columnHeaders: string[],\r\n        columnTypes: ColumnType[]\r\n\r\n    let columnOperations: {\r\n        filter: string\r\n        sort:   \"asc\" | \"desc\"\r\n    }[]\r\n\r\n</script>\r\n\r\n{#await resolveStyle(\"table\")}\r\n    <Loading/>\r\n{:then _}\r\n    <table>\r\n        <Head {columnHeaders}\r\n              {columnTypes}\r\n              bind:columnOperations>\r\n        </Head>\r\n\r\n        <Foot {matrixData}\r\n              {columnTypes}/>\r\n\r\n        <Body {matrixData}\r\n              {columnTypes}/>\r\n    </table>\r\n{/await}","<script lang=\"ts\">\r\n    import Report from \"../common/report/Report.svelte\";\r\n    import ContentBlock from \"../common/report/content/ContentBlock.svelte\";\r\n    import Table from \"../common/report/content/table/Table.svelte\";\r\n    import {SalesValues} from \"../forms/valueTypes\";\r\n    import {getReportData} from \"../../api/report\";\r\n\r\n    export let formValues: SalesValues\r\n\r\n    let reportData: (string | number | boolean | null)[][] = [],\r\n        isLoaded: boolean\r\n\r\n    const basisColumnHeaders = [\"Количество человек или перевозок\", \"Доходы\", \"Недополученные доходы\", \"Сумма сбора\", \"Доходы за провоз ручной клади\"],\r\n          basisColumnTypes: (\"number\" | \"string\" | \"boolean\")[] = [\"number\", \"number\", \"number\", \"number\", \"number\"]\r\n\r\n    let columnHeaders = basisColumnHeaders,\r\n        columnTypes   = basisColumnTypes\r\n\r\n    $: if (formValues) {\r\n        loadReportData()\r\n        columnHeaders = basisColumnHeaders\r\n        columnTypes   = basisColumnTypes\r\n\r\n        if (formValues.additional) {\r\n            if (Object.keys(formValues.operationTypes).length > 0) {\r\n                columnHeaders = [\"Вид операции\", ...columnHeaders]\r\n                columnTypes   = [\"string\", ...columnTypes]\r\n            }\r\n            if (Object.keys(formValues.shippingTicketTypes).length > 0) {\r\n                columnHeaders = [\"Вид перевозочного документа\", ...columnHeaders]\r\n                columnTypes   = [\"string\", ...columnTypes]\r\n            }\r\n            if (Object.keys(formValues.travelTicketTypes).length > 0) {\r\n                columnHeaders = [\"Вид проездного документа\", ...columnHeaders]\r\n                columnTypes   = [\"string\", ...columnTypes]\r\n            }\r\n            if (Object.keys(formValues.paymentTypes).length > 0) {\r\n                columnHeaders = [\"Вид расчёта\", ...columnHeaders]\r\n                columnTypes   = [\"string\", ...columnTypes]\r\n            }\r\n        }\r\n\r\n        if (formValues.periodDetailing) {\r\n            columnHeaders = [\"Дата продажи\", ...columnHeaders]\r\n            columnTypes   = [\"string\", ...columnTypes]\r\n        }\r\n    }\r\n\r\n    function loadReportData() {\r\n        isLoaded = false\r\n        reportData = []\r\n        getReportData(\"sales\", formValues)\r\n            .then(data => {\r\n                reportData = data\r\n            })\r\n            .finally(() => isLoaded = true)\r\n    }\r\n\r\n</script>\r\n\r\n<Report title=\"Отчёт по итогам продаж по пригороду\"\r\n        {isLoaded}>\r\n\r\n    {#if formValues}\r\n        <ContentBlock>\r\n            <Table matrixData={reportData}\r\n                   {columnHeaders}\r\n                   {columnTypes}/>\r\n        </ContentBlock>\r\n    {/if}\r\n</Report>","<script lang=\"ts\">\r\n    import Report from \"../common/report/Report.svelte\";\r\n    import ContentBlock from \"../common/report/content/ContentBlock.svelte\";\r\n    import Table from \"../common/report/content/table/Table.svelte\";\r\n    import {DepsValues} from \"../forms/valueTypes\";\r\n    import {getReportData} from \"../../api/report\";\r\n\r\n    export let formValues: DepsValues\r\n\r\n    let reportData: (string | number | boolean | null)[][] = [],\r\n        isLoaded: boolean\r\n\r\n    const basisColumnHeaders = [\"Количество пассажиров\", \"Средняя дальность\", \"Пассажиро-км\"],\r\n        basisColumnTypes: (\"number\" | \"string\" | \"boolean\")[] = [\"number\", \"number\", \"number\"]\r\n\r\n    let columnHeaders = basisColumnHeaders,\r\n        columnTypes   = basisColumnTypes\r\n\r\n    $: if (formValues) {\r\n        loadReportData()\r\n        columnHeaders = basisColumnHeaders\r\n        columnTypes   = basisColumnTypes\r\n\r\n        if (formValues.additional && Object.keys(formValues.trainCategories).length > 0) {\r\n            columnHeaders = [\"Категория поезда\", ...columnHeaders]\r\n            columnTypes   = [\"string\", ...columnTypes]\r\n        }\r\n\r\n        if (formValues.periodDetailing) {\r\n            columnHeaders = [\"Дата продажи\", ...columnHeaders]\r\n            columnTypes   = [\"string\", ...columnTypes]\r\n        }\r\n    }\r\n\r\n    function loadReportData() {\r\n        isLoaded = false\r\n        reportData = []\r\n        getReportData(\"deps\", formValues)\r\n            .then(data => {\r\n                reportData = data\r\n            })\r\n            .finally(() => isLoaded = true)\r\n    }\r\n\r\n</script>\r\n\r\n<Report title=\"Отчёт по итогам отправлений по пригороду\"\r\n        {isLoaded}>\r\n    {#if formValues}\r\n        <ContentBlock>\r\n            <Table matrixData={reportData}\r\n                   {columnHeaders}\r\n                   {columnTypes}/>\r\n        </ContentBlock>\r\n    {/if}\r\n</Report>","<script lang=\"ts\">\r\n\r\n    import Tabs from \"./common/misc/Tabs.svelte\"\r\n    import WebappTemplate from \"./common/WebappTemplate.svelte\"\r\n    import SalesForm from \"./forms/SalesForm.svelte\"\r\n    import DepsForm from \"./forms/DepsForm.svelte\"\r\n    import SalesReport from \"./reports/SalesReport.svelte\";\r\n    import DepsReport from \"./reports/DepsReport.svelte\";\r\n\r\n    let tabs =\r\n            [\r\n                \"Продажи\",\r\n                \"Отправления\"\r\n            ],\r\n        pickedTab: typeof tabs[number] = tabs[0]\r\n\r\n    let salesFormValues: {[fieldId: string]: any},\r\n        depsFormValues: {[fieldId: string]: any}\r\n\r\n    function loadSalesReport(event: CustomEvent){\r\n        salesFormValues = event.detail.formValues\r\n    }\r\n    function loadDepsReport(event: CustomEvent){\r\n        depsFormValues = event.detail.formValues\r\n    }\r\n\r\n</script>\r\n\r\n<WebappTemplate>\r\n    <Tabs {tabs}\r\n          bind:pickedTab>\r\n        {#if pickedTab === tabs[0]}\r\n            <SalesForm on:submit={loadSalesReport}/>\r\n        {:else if pickedTab === tabs[1]}\r\n            <DepsForm on:submit={loadDepsReport}/>\r\n        {/if}\r\n    </Tabs>\r\n    {#if pickedTab === tabs[0]}\r\n        <SalesReport formValues={salesFormValues}/>\r\n    {:else if pickedTab === tabs[1]}\r\n        <DepsReport formValues={depsFormValues}/>\r\n    {/if}\r\n</WebappTemplate>","import Webapp from \"./components/Webapp.svelte\"\r\nimport {getAppInfo, getUserInfo} from \"./api/info\";\r\n\r\nexport const\r\n    userInfo = await getUserInfo(),\r\n    appInfo = await getAppInfo()\r\n\r\nnew Webapp({\r\n    target: document.body\r\n})","import {SimpleHttp} from \"./http/SimpleHttp\"\nimport {serverLocations} from \"../properties\"\n\nexport function getUserInfo(): Promise<UserInfo> {\n    return SimpleHttp\n        .justGet(serverLocations.userinfo)\n        .json<UserInfo>()\n}\n\nexport function getAppInfo(): Promise<AppInfo> {\n    return SimpleHttp\n        .justGet(serverLocations.appinfo)\n        .json<AppInfo>()\n}"],"names":["noop","identity","x","add_location","element","file","line","column","char","__svelte_meta","loc","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","src_url_equal","element_src","url","document","createElement","href","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","tar","src","k","assign","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","loop","callback","promise","Promise","fulfill","add","abort","globals","globalThis","global","append","target","node","appendChild","get_root_for_style","root","getRootNode","ownerDocument","host","append_empty_stylesheet","style_element","textContent","style","head","sheet","append_stylesheet","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","name","svg_element","createElementNS","text","data","createTextNode","space","empty","toggle_class","toggle","classList","custom_event","type","detail","bubbles","cancelable","CustomEvent","managed_styles","Map","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","t","rule","str","hash","charCodeAt","doc","stylesheet","rules","get","info","set","create_style_information","insertRule","cssRules","animation","delete_rule","previous","split","next","filter","anim","indexOf","deleted","join","ownerNode","clear","set_current_component","component","get_current_component","Error","onMount","$$","on_mount","push","onDestroy","on_destroy","createEventDispatcher","callbacks","event","call","defaultPrevented","bubble","this","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","resolve","update_scheduled","schedule_update","then","flush","tick","add_render_callback","add_flush_callback","seen_callbacks","flushidx","saved_component","update","e","pop","has","fragment","before_update","after_update","wait","dispatch","direction","kind","dispatchEvent","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","null_transition","create_in_transition","params","options","animation_name","config","running","cleanup","go","easing","linear","css","start_time","end_time","started","start","invalidate","end","create_bidirectional_transition","intro","original_inert_value","running_program","pending_program","clear_animation","init","program","abs","group","inert","handle_promise","token","index","key","value","resolved","child_ctx","current","needs_flush","blocks","m","mount","anchor","error","catch","hasCatch","pending","update_await_block_branch","bind","props","bound","create_component","mount_component","new_on_destroy","map","destroy_component","filtered","targets","flush_render_callbacks","instance","create_fragment","not_equal","append_styles","parent_component","on_disconnect","context","skip_bound","ready","ret","rest","fill","make_dirty","hydrate","nodes","Array","from","childNodes","children","l","SvelteComponent","$$set","$destroy","$on","splice","$set","obj","keys","dispatch_dev","version","append_dev","insert_dev","insertBefore","insert","detach_dev","listen_dev","handler","has_prevent_default","has_stop_propagation","has_stop_immediate_propagation","modifiers","dispose","addEventListener","removeEventListener","listen","attr_dev","attribute","removeAttribute","getAttribute","setAttribute","attr","set_data_dev","ensure_array_like_dev","arg","Symbol","iterator","array_like_or_iterator","validate_slots","slot_key","console","warn","SvelteComponentDev","$$prop_def","$$events_def","$$slot_def","constructor","$$inline","super","$capture_state","$inject_state","cubicOut","fade","getComputedStyle","opacity","slide","axis","primary_property","primary_property_value","parseFloat","secondary_properties","capitalized_secondary_properties","toUpperCase","padding_start_value","padding_end_value","margin_start_value","margin_end_value","border_width_start_value","border_width_end_value","min","__svelte","v","rootPath","location","pathname","resourcesPath","serverLocations","images","styles","modules","appinfo","userinfo","export","report","dataSources","serviceBank","serverErrors","virtualSelectProperties","additionalClasses","disabled","autofocus","markSearchResults","zIndex","optionsCount","maxWidth","position","disableAllOptionsSelectedText","placeholder","noOptionsText","noSearchResultsText","selectAllText","searchPlaceholderText","optionsSelectedText","optionSelectedText","allOptionsSelectedText","clearButtonText","moreText","sweetAlertProperties","confirmButtonColor","showCloseButton","allowEnterKey","showConfirmButton","stylesPromises","modulesPromises","resolveStyle","reject","link","rel","onload","onerror","resolveStyles","names","all","div","svg","circle","div2","div0","div1","t_value","button","pickedTab","tabs","Module","destroy","getAnimationShowClass","sweet","mouseEvent","alert","getSweetMousePosition","swal","fire","showClass","popup","hideClass","clientX","clientY","screenWidth","innerWidth","documentElement","clientWidth","body","screenHeight","innerHeight","clientHeight","popupList","title","list","footer","html","item","icon","popupAction","confirmButtonText","onConfirm","result","isConfirmed","popupRadioAction","radios","inputOptions","input","inputValue","inputValidator","img","img_src_value","if_block","create_if_block","preventDefault","$$value","appInfo","groupName","groupPath","header","reload","create_if_block_1","className","$$props","gridElement","form","button_changes","form_intro","handleSubmit","$$invalidate","submitIsTouched","span","equal","JSON","stringify","stringifyDate","date","year","getFullYear","month","getMonth","day","getDate","InputModule","changeRootValueFn","onChangeCallbacks","onChange","getValue","setValue","changeRootValue","some","parse","_a","EasepickModule","rootElement","pickedDate","isArray","setStartDate","setEndDate","setDate","initialDetail","DateTime","easepick","calendars","range","grid","plugins","RangePlugin","AmpPlugin","LockPlugin","lang","startDate","endDate","locale","one","few","many","delimiter","darkMode","dropdown","minYear","Number","maxYear","months","years","maxDays","setup","picker","on","easepickDetailToCalendarValue","setTimeout","hide","click","label","checked","modulePromise","promiseName","promiseContainer","promisePromise","import","VirtualSelectModule","newKeys","mountPromise","VirtualSelect","ele","multiple","search","hasOptionDescription","showCodes","disableSelectAll","maxValues","newValue","currentTarget","optionKeys","setOptions","newOptions","enable","disable","reset","blur","open","close","focus","_b","factoryElement","exportAsJpeg","jpegName","toJpeg","dataUrl","download","remove","scrollIntoElement","scrollIntoView","behavior","toggleFullscreen","getFullscreenElement","exitFullscreen","requestFullscreen","querySelector","hidden","cursorLoadersCount","Http","send","method","headers","payload","cursor","response","fetch","prepareHeaders","finally","ok","status","statusText","message","popupError","find","encodeURIComponent","put","post","SimpleHttp","withAll","sendFor","json","blob","async","getOptionsFromSB","listName","listKeyName","listValueName","withBody","withHeaders","andBody","patch","justGet","period","calendar_props","calendar_changes","periodDetailing","switch_1_props","switch_1_changes","carriers","select_props","select_changes","roads","isWrong","field0_changes","field1_changes","additional","$$self","values","paymentTypes","travelTicketTypes","shippingTicketTypes","operationTypes","regions","trainCategories","ExportableReport","tables","addTable","table","toJson","NULL_CELL_CLASSES","IGNORED_CELL_CLASSES","IGNORED_ROW_CLASSES","TableModel","htmlTable","parseTable","row","tHead","rows","isRowIgnored","RowModel","tBodies","j","tFoot","cls","contains","htmlTableRow","cells","parseRow","cell","display","CellModel","htmlTableCell","convertValue","hasAttribute","nodeType","Node","TEXT_NODE","getDirectText","colspan","colSpan","rowspan","rowSpan","total","log","num","isNaN","normalized","trim","toLowerCase","getReportData","reportId","formValues","downloadReport","URL","createObjectURL","revokeObjectURL","create_if_block_3","create_if_block_2","h2","reportRootElement","KeyboardEvent","div1_transition","t0_value","t0","h3","ev","show","td","td_class_value","tr","tbody","matrixData","columnTypes","th","columnHeaders","thead","tfoot","userInfo"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]}